swagger: '2.0'
info:
  version: '2.0.0'
  title: Yapstone Instrument Services
  description: Set of API's that allow clients to create and manage an instrument

basePath: /instrument/api/v2
x-base-path-prefix: /v2

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"

paths:
  /search/tag/{tag}:
    get:
      tags: ['search']
      description: Get billing instrument by tag
      operationId: getBillingInstrument
      parameters:
        - name: tag
          in: path
          type: string
          required: true
          description: The input entity can be Merchant or Marketplace or AsstListing
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/InstrumentResource'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

# Payout-Instrument Resources
  /payout-instruments:
    get:
      tags: ['deprecated']
      description: Get all Payout Instrument Resources the actor has access to in the system.
      operationId: getPayoutInstruments
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/size'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/PayoutInstrumentsResource'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '422':
          description: unprocessable
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

    post:
      tags: ['deprecated']
      description: Creates an Payout Instrument Resource in the system.
      operationId: createPayoutInstrument
      parameters:
        - name: payoutInstrumentRequest
          in: body
          description: The Payout Instrument Request Resource to be created.
          required: true
          schema:
            $ref: '#/definitions/PayoutInstrumentRequest'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/PayoutInstrumentResource'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

  /payout-instruments/{payoutInstrumentId}:
    get:
      tags: ['deprecated']
      description: Retrieves an Payout Instrument Resource from the system for the given payoutInstrumentId.
      operationId: getPayoutInstrument
      parameters:
        - $ref: '#/parameters/payoutInstrumentId'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/PayoutInstrumentResource'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

 # Update PayoutInstrument resource
    put:
      tags: ['deprecated']
      description: Updates the PayoutInstrument Resource.
      operationId: updatePayoutInstrument
      consumes:
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/payoutInstrumentId'
        - name: payoutInstrumentUpdateRequest
          in: body
          description: The PayoutInstrument Request Resource to be updated.
          required: true
          schema:
            $ref: '#/definitions/PayoutInstrumentUpdateRequest'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/PayoutInstrumentResource'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

    delete:
      tags: ['deprecated']
      description: Deactivates the Payout Instrument Resource in the system.
      operationId: deactivatePayoutInstrument
      parameters:
        - $ref: '#/parameters/payoutInstrumentId'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/DeactivateResponse'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

  # Instrument Resources
  /instruments:
    get:
      tags: ['instruments']
      description: Get all Instrument Resources the actor has access to in the system.
      operationId: getInstruments
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/size'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/InstrumentsResource'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '422':
          description: unprocessable
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

    post:
      tags: ['instruments']
      description: Creates an Instrument Resource in the system.
      operationId: createInstrument
      parameters:
        - name: instrumentRequest
          in: body
          description: The Instrument Request Resource to be created.
          required: true
          schema:
            $ref: '#/definitions/InstrumentRequest'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/InstrumentResource'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'
  /instruments/managedBy/{managedBy}:
      get:
        tags: ['instruments']
        description: Retrieves Instrument Resources from the system for the given managedBy.
        operationId: getInstrumentUsingManagedBy
        parameters:
          - $ref: '#/parameters/managedBy'
        responses:
          '200':
            description: ok
            schema:
              $ref: '#/definitions/InstrumentsResource'
          '401':
            description: unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '404':
            description: not found
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: internal service error
            schema:
              $ref: '#/definitions/Errors'


  /instruments/{instrumentId}:
    get:
      tags: ['instruments']
      description: Retrieves an Instrument Resource from the system for the given instrumentId.
      operationId: getInstrument
      parameters:
        - $ref: '#/parameters/instrumentId'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/InstrumentResource'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

    # Update Instrument resource
    put:
      tags: ['instruments']
      description: Updates the Instrument Resource.
      operationId: updateInstrument
      consumes:
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/instrumentId'
        - name: instrumentUpdateRequest
          in: body
          description: The Instrument Request Resource to be updated.
          required: true
          schema:
            $ref: '#/definitions/InstrumentUpdateRequest'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/InstrumentResource'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

    delete:
      tags: ['instruments']
      description: Deactivates the Instrument Resource in the system.
      operationId: deactivateInstrument
      parameters:
        - $ref: '#/parameters/instrumentId'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/DeactivateResponse'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

  /instruments/validateCard:
    post:
      tags: ['instruments']
      description: Validate a payment card
      operationId: validateCard
      parameters:
        - name: validateRequest
          in: body
          description: The Instrument Request Resource to be validated.
          required: true
          schema:
            $ref: '#/definitions/ValidateCardRequest'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/ValidateCardResponse'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'

  /instruments/verifyCard:
    post:
      tags: ['instruments']
      description: Verifies a payment card
      operationId: verifyCard
      parameters:
        - name: verifyRequest
          in: body
          description: The Instrument Request Resource to be verified.
          required: true
          schema:
            $ref: '#/definitions/VerifyCardRequest'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/VerifyCardResponse'
        '422':
          description: unprocessable entity
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'
  /admin/instruments/{instrumentId}:
    get:
      tags: ['admin']
      description: Retrieves an Payout Instrument Resource from the system for the given instrumentId.
      operationId: getInstrument
      parameters:
        - $ref: '#/parameters/instrumentId'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/InstrumentResource'
        '401':
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: internal service error
          schema:
            $ref: '#/definitions/Errors'
parameters:
  contractId:
    name: contractId
    in: path
    required: true
    description: The unique id of the Contract Resource.
    type: string
  assetId:
    name: assetId
    in: path
    required: true
    description: The unique id of the Asset Resource.
    type: string
  externalId:
    name: externalId
    in: query
    description: The identifier used by an external client.
    type: string
  externalIdRequired:
    name: externalId
    in: query
    required: true
    description: The identifier used by an external client.
    type: string
    x-validation-required-message: '{OB0018}'
  page:
    name: page
    in: query
    description: page number
    type: integer
    format: int32
  payoutInstrumentId:
    name: payoutInstrumentId
    in: path
    required: true
    description: The unique id of the  Payout Instrument Resource.
    type: string
  instrumentId:
    name: instrumentId
    in: path
    required: true
    description: The unique id of the Instrument Resource.
    type: string
  productId:
    in : path
    name: productId
    required: true
    description: The unique id of Product Resource.
    type: string
  size:
    name: size
    in: query
    description: Maximum number of records to return per page
    type: integer
    format: int32
  managedBy:
    name: managedBy
    in: path
    required: true
    description: The id of the  ManagedBy for getting Payout Instrument Resource.
    type: string

definitions:

  # entity resource set
  EntitiesResource:
    type: object
    description: Set of all resources
    properties:
      meta:
        $ref: '#/definitions/meta'
    required:
      - meta

  # action
  ActionResource:
    type: object
    description: The action that must be taken on the entity.
    properties:
      actionCode:
        type: string
        description: The name of the type of action that must be taken.
      description:
        type: string
        description: A detailed description of the action that must be performed.
      entityId:
        type: string
        description: id for the enitity that requires the action.
      entityType:
        type: string
        description: the type of entity for the required action.
      type:
        type: string
        description: the type of check that triggered the required action.

  #expiration
  ExpirationDateResource:
    type: object
    description: Card Expiration Date.
    properties:
      year:
        type: string
        description: card expiration year
        maxLength: 4
        minLength: 4
      month:
        type: string
        description: card expiration month
        maxLength: 2
        minLength: 2


  # address
  AddressResource:
    type: object
    description: The address of the application, asset, bank, etc.
    required:
      - countryCode
    properties:
      street1:
        type: string
        description: The street address line 1.
        maxLength: 2048
        x-validation-max-length-message: '{OB0106}'
      street2:
        type: string
        description: The street address line 2.
        maxLength: 2048
        x-validation-max-length-message: '{OB0106}'
      street3:
        type: string
        description: The street address line 3.
        maxLength: 2048
        x-validation-max-length-message: '{OB0106}'
      street4:
        type: string
        description: The street address line 4.
        maxLength: 2048
        x-validation-max-length-message: '{OB0106}'
      city:
        type: string
        description: The name of the city.
        minLength: 2
        maxLength: 255
        x-validation-min-max-length-message: '{OB0108}'
      state:
        type: string
        description: The state or province where the address resides(required for USA and CAN).
        maxLength: 255
        minLength: 2
        x-validation-min-max-length-message: '{OB0108}'
      postalCode:
        type: string
        description: The postal code of the address.
        maxLength: 64
        minLength: 1
        pattern: ".*[^\\s].*"
        x-validation-pattern-message: '{OB0119}'
        x-validation-min-max-length-message: '{OB0109}'
      countryCode:
        type: string
        description: The 3-letter countryCode of the address.
        maxLength: 3
        minLength: 3
        x-validation-annotation-iso3-country: true
        x-validation-annotation-iso3-country-message: '{OB0102}'
        x-validation-min-max-length-message: '{OB0118}'
        x-validation-required-message: '{OB0018}'

  # bank account
  BankAccountResource:
    type: object
    description: The Bank account information.
    required:
      - type
      - currency
      - bankAccountData
    properties:
      type:
        type: string
        description: The type of bank account [CHECKING, SAVINGS]
        enum:
          - CHECKING
          - SAVINGS
        x-validation-required-message: '{OB0018}'
      nameOnAccount:
        type: string
        description: The name on the account.
        minLength: 3
        maxLength: 99
        pattern: "^[\\p{L}0-9\\s'.()&-]+$"
        x-validation-min-max-length-message: '{OB0112}'
        x-validation-required-message: '{OB0018}'
      currency:
        type: string
        description: Need to be 3 digit currency code(ISO 3). USD, CAD, EUR, GBP, DOP, BSD, CRC, ANG, JMD, MXN, CHF.
        x-validation-required-message: '{OB0018}'
        x-validation-annotation-iso-currency: true
        x-validation-annotation-iso-currency-message: '{OB0022}'
      bankAccountData:
        description: Detailed information about the bank account.
        $ref: '#/definitions/BankAccountDataResource'
        x-validation-required-message: '{OB0018}'
      bankName:
        type: string
        description: The bank name.
        minLength: 2
        maxLength: 36
        pattern: "^[a-zA-Z0-9 ]*$"
        x-validation-size-message: '{OB0113}'

      country:
        type: string
        description: The bank country.
        minLength: 3
        maxLength: 3
        x-validation-size-message: '{OB0125}'


  # bank account data
  BankAccountDataResource:
    type: object
    description: Detailed information about the bank account.
    properties:
      bankAccountDataToken:
        type: string
        description: The key to the vault that contains the sensitive bank data.
        minLength: 1
        readOnly: true
      fingerprint:
        type: string
        description: The bank account number fingerprint.
      routingCode:
        type: string
        description: routing code for USA, bank/branch identification for rest of the world
      accountNumber:
        type: string
        description: Bank account number. If this is iban, routing code (bank/branch identification code) can be empty
      displayText:
        type: string
        description: The textual description of the account.

  # Card data
  CardDataResource:
    type: object
    description: Payment card details.
    required:
      - expirationDate
      - cardHolderName
    properties:
      cardType:
        type: string
        description: Type of the card ( DEBIT, CREDIT, PREPAID)
        enum:
         - DEBIT
         - CREDIT
         - PREPAID
      brand:
        type: string
        description: Issuing authority
        enum:
         - VISA
         - MASTERCARD
         - AMEX
         - DISCOVER
         - MAESTRO
      cardTokenSource:
        type: string
        enum:
         - APPLEPAY
         - ANDROID
         - SAMSUNG
      expirationDate:
        $ref: '#/definitions/ExpirationDateResource'
      billingAddress:
        $ref: '#/definitions/AddressResource'
      cardHolderName:
        type: string
        description: Name on the card
        minLength: 3
        maxLength: 99
        pattern: "^[\\p{L}0-9\\s'.()&-]+$"
        x-validation-min-max-length-message: '{OB0112}'
        x-validation-required-message: '{OB0018}'
      cardTokenData:
        type: string
        description: The token to get the card details from vault.
      fingerprint:
        type: string
        description: The credit card number fingerprint.
      cardNumber:
        type: string
        minLength: 12
        maxLength: 19
        description: The card number.
        x-validation-required-message: '{OB1303}'
      cvv:
        type: string
        description: CVV number.
        x-validation-required-message: '{OB1302}'
      currency:
        type: string
        description: Need to be 3 digit currency code(ISO 3). USD, CAD, EUR, GBP, DOP, BSD, CRC, ANG, JMD, MXN, CHF.
        x-validation-annotation-iso-currency: true
        x-validation-annotation-iso-currency-message: '{OB0022}'
      country:
        type: string
        readOnly: true
      cardClass:
        type: string
        readOnly: true
      checkCVV:
        type: boolean
      checkAVS:
        type: boolean
      checkFullAVS:
        type: boolean

  # mandate related info
# consent base
  Consent:
    type: object
    x-abstract-class: true
    x-jackson-json-sub-type-info: true
    discriminator: type
    required:
      - type
      - accepted
      - timeOfConsent
      - version
      - ipAddress
    properties:
      type:
        type: string
        description: Type of the consent
        enum:
          - DIRECT_DEBIT
      accepted:
        type: boolean
        description: Indicates the acceptance of the T&Cs.
      timeOfConsent:
        type: string
        description: Time of the consent
        format: date-time
      version:
        type: integer
        description: Version of the consent
        format: int32
        default: 1
      ipAddress:
        type: string
        description: IP Address of machine from which consent was given
        minLength: 1
        maxLength: 15
        x-validation-min-max-length-message: '{OB0104}'
        x-validation-required-message: '{OB0018}'
        x-validation-annotation-ip-address: true
        x-validation-annotation-ip-address-message: '{OB0036}'

# directdebitconsent request object

  DirectDebitConsentResource:
    type: object
    x-jackson-json-type-name: DIRECT_DEBIT
    allOf:
      - $ref: '#/definitions/Consent'
      - required:
        - creditorId
      - properties:
          externalId:
            type: string
            description: The reference number that client has for the mandate
          creditorId:
            type: string
            description: The creditor Id
            enum:
              - MARKETPLACE
              - YAPSTONE

  AbstractEntity:
    type : object
    properties:
      externalId:
        type: string
        description: The partners externalId id for entity.
        pattern: ".*[^\\s].*"
        maxLength: 255
        minLength: 1
        x-validation-min-max-length-message: '{OB0116}'
        x-validation-pattern-message: '{OB0119}'

  Resource:
    type: object
    description: Things common to all top-level resources
    properties:
        id:
          description: The unique id of the resource
          type: string

  InstrumentOperationalStatus:
    type: object
    allOf:
    - properties:
        payoutStatus:
          description: The current payout status. This is applicable only for the Marketplace product.
          $ref: '#/definitions/ActionStatusResource'
        debitStatus:
          description: The current debit status. This is applicable only for the Payout product.
          $ref: '#/definitions/ActionStatusResource'

  # payout common resource
  PayoutInstrumentResourceCommonEntities:
      type: object
      description: Payout Instrument.
      required:
        - type
      properties:
        externalId:
          type: string
          description: The partners externalId id for the Payout Instrument.
          pattern: ".*[^\\s].*"
          maxLength: 255
          minLength: 1
          x-validation-min-max-length-message: '{OB0116}'
          x-validation-pattern-message: '{OB0119}'
        bankAccount:
          description: The bank account information.
          $ref: '#/definitions/BankAccountResource'
        paymentCard:
          description: The details of the payment card.
          $ref: '#/definitions/CardDataResource'
        type:
          type: string
          description: The type of finanancial instrument [BANK_ACCOUNT]
          enum:
            - BANK_ACCOUNT
            - CARD
            - CHECK
          x-validation-required-message: '{OB0018}'
        options:
          $ref: '#/definitions/ObjectNode'
        managedBy:
          type: array
          items:
            type: string
          description:  The entity which managed the Instrument. This can be a merchant/marketplace/customer.

  # instrument version of PayoutInstrumentResourceCommonEntities
  InstrumentResourceCommonEntities:
    type: object
    allOf:
      - $ref: '#/definitions/PayoutInstrumentResourceCommonEntities'

  # payout instrument request
  PayoutInstrumentRequest:
    type: object
    description: The Payout Instrument such as Bank Account is used when sending money to an Asset Owner.
    required:
      - owner
    allOf:
    - $ref: '#/definitions/PayoutInstrumentResourceCommonEntities'
    - properties:
        owner:
          type: object
          description: payout owner name details
          $ref: '#/definitions/OwnerResource'
        consents:
          type: array
          description: list of consent requests
          items:
            $ref: '#/definitions/Consent'
        products:
          type: array
          description: Products requested by marketplace.
          items:
            $ref: '#/definitions/Product'

  # instrument version of payout instrument request
  InstrumentRequest:
    type: object
    description: The Instrument such as Bank Account is used when sending money to an Asset Owner.
    required:
      - owner
    allOf:
      - $ref: '#/definitions/InstrumentResourceCommonEntities'
      - properties:
          owner:
            type: object
            description: payout owner name details
            $ref: '#/definitions/OwnerResource'
          consents:
            type: array
            description: list of consent requests
            items:
              $ref: '#/definitions/Consent'
          products:
            type: array
            description: Products requested by marketplace.
            items:
              $ref: '#/definitions/Product'


  # verify card request -- for calling card bin check and $0 auth
  VerifyCardRequest:
    type: object
    description: The Card Instrument to verify.
    required:
      - paymentCard
    properties:
      paymentCard:
        $ref: '#/definitions/CardDataResource'
      checkCVV:
        type: boolean
      checkAVS:
        type: boolean
      checkFullAVS:
        type: boolean
      createCardToken:
        type: boolean
        default: false

  # verify card response -- for calling card bin check and $0 auth
  VerifyCardResponse:
    type: object
    properties:
      id:
        type: string
        description: Id of the Instrument Verification Data
      status:
        type: string
        enum:
          - OK
          - ERROR
          - TIMEOUT
      result:
        type: string
        enum:
          - APPROVED
          - DECLINED
          - VERIFIED
      merchantTransactionId:
        type: string
        title: Identifies the transaction across all YS systems (aka YapID)
      processorName:
        type: string
        title: The processor which performed Account Verification.
      authResult:
        type: object
        title: Auth Result.
        $ref: '#/definitions/VerifyCardResult'
      cvvResult:
        type: object
        title: Indicates processor's CVV check result.
        $ref: '#/definitions/VerifyCardResult'
      avsResult:
        type: object
        title: Indicates processor's address/zip code validation result
        $ref: '#/definitions/VerifyCardResult'
      avsResultMapped:
        type: string
        enum:
          - NOT_PRESENT
          - MATCH
          - STREET_NOT_MATCH
          - POSTAL_CODE_NOT_MATCH
          - NO_MATCH
      cvvResultMapped:
        type: string
        enum:
          - NOT_PRESENT
          - MATCH
          - NO_MATCH
      authResultMapped:
        type: object
        title: Indicates Auth Result
        $ref: '#/definitions/VerifyCardResult'
      authCode:
        type: string
      cardType:
        type: string
      cardNetwork:
        type: string
      currency:
        type: string
      country:
        type: string
        readOnly: true
      cardClass:
        type: string
        readOnly: true
      cardLastFour:
        type: string
      instrumentId:
        type: string

  # validate card request -- for calling card bin only
  ValidateCardRequest:
    type: object
    description: The Card Instrument to validate.
    required:
      - paymentCard
    properties:
      paymentCard:
        $ref: '#/definitions/cardDataResource'

  # validate card response -- for calling card bin only
  ValidateCardResponse:
    type: object
    properties:
      cardType:
        type: string
      cardNetwork:
        type: string
      country:
        type: string
        readOnly: true
      cardClass:
        type: string
        readOnly: true
      currency:
        type: string
        readOnly: true

  VerifyCardResult:
    type: object
    properties:
      result:
        type: string
      code:
        type: string
      description:
        type: string

  # payout instrument update request
  PayoutInstrumentUpdateRequest:
    type: object
    description: The Payout Instrument update request.
    allOf:
    - $ref: '#/definitions/PayoutInstrumentResourceCommonEntities'
    - properties:
        status:
          description: The current status of the resource.
          $ref: '#/definitions/EntityProductStatusResource'
        owner:
          type: object
          description: Updated Owner.
          $ref: '#/definitions/OwnerRequest'
        consents:
          type: array
          description: list of consent requests
          items:
            $ref: '#/definitions/Consent'
        products:
          type: array
          description: Products requested by marketplace.
          items:
            $ref: '#/definitions/Product'


  # instrument version of payout instrument update request
  InstrumentUpdateRequest:
    type: object
    description: The Instrument update request.
    allOf:
      - $ref: '#/definitions/InstrumentResourceCommonEntities'
      - properties:
          status:
            description: The current status of the resource.
            $ref: '#/definitions/EntityProductStatusResource'
          operationalStatus:
            description: Operational Status of the Payout instrument
            $ref: '#/definitions/InstrumentOperationalStatus'
            readOnly: true
          owner:
            type: object
            description: Updated Owner.
            $ref: '#/definitions/OwnerRequest'
          consents:
            type: array
            description: list of consent requests
            items:
              $ref: '#/definitions/Consent'
          products:
            type: array
            description: Products requested by marketplace.
            items:
              $ref: '#/definitions/Product'

  # payout instrument resource
  PayoutInstrumentResource:
    type: object
    description: Payout Instrument resource contains information about the payout account.
    required:
      - owner
    allOf:
    - $ref: '#/definitions/PayoutInstrumentResourceCommonEntities'
    - properties:
        id:
          type: string
          description: The resource identifier for the Payout Instrument.
          x-validation-required-message: '{OB0018}'
          readOnly: true
        status:
          description: The current status of the resource.
          $ref: '#/definitions/EntityProductStatusResource'
          x-validation-required-message: '{OB0018}'
          readOnly: true
        owner:
          type: object
          description: payout owner name details
          $ref: '#/definitions/OwnerResource'
        consents:
          type: array
          description: list of consent responses
          items:
            $ref: '#/definitions/Consent'
        products:
          type: array
          description: Products requested by marketplace.
          items:
            $ref: '#/definitions/Product'
        capabilities:
          type: array
          description: Set of capabilities the instrument can perform.
          items:
            $ref: '#/definitions/CapabilityResource'

  # instrument version of payout instrument resource
  InstrumentResource:
    type: object
    description: Instrument resource contains information about the payout account.
    required:
      - owner
    allOf:
      - $ref: '#/definitions/InstrumentResourceCommonEntities'
      - properties:
          id:
            type: string
            description: The resource identifier for the Payout Instrument.
            x-validation-required-message: '{OB0018}'
            readOnly: true
          status:
            description: The current status of the resource.
            $ref: '#/definitions/EntityProductStatusResource'
            x-validation-required-message: '{OB0018}'
            readOnly: true
          operationalStatus:
            description: Operational Status of the Payout instrument
            $ref: '#/definitions/InstrumentOperationalStatus'
            readOnly: true
          owner:
            type: object
            description: payout owner name details
            $ref: '#/definitions/OwnerResource'
          consents:
            type: array
            description: list of consent responses
            items:
              $ref: '#/definitions/Consent'
          products:
            type: array
            description: Products requested by marketplace.
            items:
              $ref: '#/definitions/Product'
          capabilities:
            type: array
            description: Set of capabilities the instrument can perform.
            items:
              $ref: '#/definitions/CapabilityResource'



  # payout instrument resource
  PayoutInstrumentsResource:
    allOf:
      - $ref: '#/definitions/EntitiesResource'
      - type: object
        description: Set of all payout instrument resources
        properties:
          results:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/PayoutInstrumentResource'
        required:
          - results

  # instrument version of payout instrument resource
  InstrumentsResource:
    allOf:
      - $ref: '#/definitions/EntitiesResource'
      - type: object
        description: Set of all payout instrument resources
        properties:
          results:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/InstrumentResource'
        required:
          - results


  # delete response
  DeactivateResponse:
    type: object
    description: The deactivate response contains if the deactivation was successful and entity IDs for associated entities (in case of cascade delete).
    properties:
      message:
        type: string
      cascadedContracts:
        type: array
        description: "List of contracts successfully de-activated due to cascade, otherwise empty"
        items:
          type: string
      failedContracts:
        type: array
        description: "List of contracts failed to de-activate while cascade, otherwise empty"
        items:
          type: string


  #
  EntityProductStatusResource:
    type: object
    description: The status of the entity.
    properties:
      marketplace:
        description: The status of the entity with respect to the marketplace product.
        $ref: '#/definitions/StatusResource'
      payout:
        description: The status of the entity with respect to the payout product.
        $ref: '#/definitions/StatusResource'

  # Individual product entry statuses for an entity
  StatusResource:
    type: object
    description: The status of the entity relative to a product.
    required:
      - verificationStatus
    properties:
      verificationStatus:
        type: string
        description: The status of the entity.
        enum:
          - VERIFICATION_NOT_STARTED
          - DECLINED
          - UNVERIFIED
          - VERIFIED
          - VERIFICATION_IN_PROGRESS
          - DEACTIVATED
          - VALIDATED
        x-validation-required-message: '{OB0018}'
      requiredActions:
        type: array
        items:
          $ref: '#/definitions/ActionResource'
      reasons:
        type: array
        items:
          type: string

  # status
  ActionStatusResource:
    type: object
    description: The status of the entity.
    required:
      - status
    properties:
      status:
        type: string
        description: The status of the entity.
        enum:
          - ENABLED
          - DISABLED
          - SUSPENDED
        x-validation-required-message: '{OB0018}'
      requiredActions:
        type: array
        items:
          $ref: '#/definitions/ActionResource'
      suspendedReasons:
        type: array
        items:
          $ref: '#/definitions/SuspensionReasonResource'
        description: Indicates the reason for suspension

  #suspension reason resource
  SuspensionReasonResource:
    type: object
    description: suspension reasons and their current values
    properties:
      suspensionReason:
        type: string
        description: reason for suspension if selected

  # owner
  IndividualOwnerResource:
    type: object
    description: The name of the owner of the asset. It will consist of first and last name.
    required:
      - first
      - last
    properties:
      first:
        type: string
        description: The persons first name.
        maxLength: 100
        minLength: 1
        pattern: ".*[^\\s].*"
        x-validation-min-max-length-message: '{OB0100}'
        x-validation-pattern-message: '{OB0119}'
        x-validation-required-message: '{OB0018}'
      last:
        type: string
        description: The persons last name.
        maxLength: 100
        minLength: 1
        pattern: ".*[^\\s].*"
        x-validation-min-max-length-message: '{OB0100}'
        x-validation-pattern-message: '{OB0119}'
        x-validation-required-message: '{OB0018}'

  BusinessOwnerResource:
    type: object
    description: The business that is the owner of the asset
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the business.
        minLength: 3
        maxLength: 512
        x-validation-min-max-length-message: '{OB0107}'
        x-validation-required-message: '{OB0018}'

  OwnerResource:
    type: object
    description: The owner of the asset
    required:
      - first
      - last
    properties:
      id:
        type: string
        description: id of the applicant
      first:
          type: string
          description: The persons first name.
          maxLength: 100
          minLength: 1
          pattern: ".*[^\\s].*"
          x-validation-min-max-length-message: '{OB0100}'
          x-validation-pattern-message: '{OB0119}'
          x-validation-required-message: '{OB0018}'
      last:
        type: string
        description: The persons last name.
        maxLength: 100
        minLength: 1
        pattern: ".*[^\\s].*"
        x-validation-min-max-length-message: '{OB0100}'
        x-validation-pattern-message: '{OB0119}'
        x-validation-required-message: '{OB0018}'
      address:
        description: The address of the owner
        $ref: '#/definitions/AddressResource'
        x-validation-required-message: '{OB0018}'

  OwnerRequest:
    type: object
    description: The owner of the asset
    required:
      - first
      - last
    properties:
      first:
          type: string
          description: The persons first name.
          maxLength: 100
          minLength: 1
          pattern: ".*[^\\s].*"
          x-validation-min-max-length-message: '{OB0100}'
          x-validation-pattern-message: '{OB0119}'
          x-validation-required-message: '{OB0018}'
      last:
        type: string
        description: The persons last name.
        maxLength: 100
        minLength: 1
        pattern: ".*[^\\s].*"
        x-validation-min-max-length-message: '{OB0100}'
        x-validation-pattern-message: '{OB0119}'
        x-validation-required-message: '{OB0018}'
      address:
        description: The address of the owner
        $ref: '#/definitions/AddressResource'
        x-validation-required-message: '{OB0018}'

  PatchOperation:
    type: string
    description: The operation to be performed
    enum:
      - "add"
      - "delete"
      - "update"

  #product
  Product:
    description: a supported instrument product that we offer to our customers.
    type: string
    enum:
      - MARKETPLACE
      - PAYOUT

  Meta:
    type: object
    allOf:
      - $ref: '#/definitions/Pagination'

  Pagination:
    type: object
    properties:
      totalCount:
        type: integer
        format: int64
      page:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
    required:
      - page
      - size

  # Only used to remove error msg when using $ref: '#/definitions/Errors'. Actual Errors is mapped to correct class in
  # rest-api pom, in swagger-codegen-maven-plugin import-mappings config
  Errors:
    type: object

  CapabilityResource:
    type: object
    x-jackson-json-sub-type-info: true
    x-jackson-json-sub-type-as-exiting-property: true
    discriminator: type
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - DIRECT_DEBIT
      additionalProperties:
        $ref: '#/definitions/ObjectNode'

  DirectDebitSchemeType:
    type: string
    description: The mandate scheme based RUN_CHECKS_IN_ISOLATION on the country
    enum:
      - SEPA
      - BACS
      - OTHER

  DirectDebtCapabilityResource:
    type: object
    x-jackson-json-type-name: DIRECT_DEBIT
    allOf:
      - $ref: '#/definitions/CapabilityResource'
      - properties:
          id:
            type : string
            description: The id of the mandate maintained internally by yapstone
          scheme:
            $ref: '#/definitions/DirectDebitSchemeType'
          status:
            type: string
            description: The status of the capability
            enum:
              - ENABLED
              - DISABLED
              - SUSPENDED
          creditorId:
            type: string
            description: The creditor Id
            enum:
              - MARKETPLACE
              - YAPSTONE
              -
  ObjectNode:

