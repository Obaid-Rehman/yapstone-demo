swagger: '2.0'
info:
  description: "REST API for Token Orchestrator"
  version: 0.0.1
  title: Token Orchestrator
  contact:
    name: Yapstone
    email: admin@yapstone.com
  license:
    name: Apache License Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      Bearer authorization

basePath: /token-orchestrator

tags:
  - name: TokenOrchestratorV1
    description: Token Orchestrator V1
  - name: TokenOrchestratorV2
    description: Token Orchestrator V2
paths:
  /v1/token:
    post:
      tags:
        - TokenOrchestratorV1
      summary: createToken
      operationId: createTokenUsingPOST
      security:
        - Bearer: [ ]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tokenRequest
          description: tokenRequest
          required: true
          schema:
            $ref: '#/definitions/TokenRequest'
        - name: x-yapstone-trace-id
          in: header
          description: x-yapstone-trace-id
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v2/token:
    post:
      tags:
        - TokenOrchestratorV2
      summary: createTokenV2
      operationId: createTokenV2UsingPOST
      security:
        - Bearer: [ ]
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: tokenRequest
          description: tokenRequest
          required: true
          schema:
            $ref: '#/definitions/TokenRequestV2'
        - name: x-yapstone-fpsid
          in: header
          description: x-yapstone-fpsid
          required: false
          type: string
        - name: x-yapstone-ipaddress
          in: header
          description: x-yapstone-ipaddress
          required: false
          type: string
        - name: x-yapstone-trace-id
          in: header
          description: x-yapstone-trace-id
          required: false
          type: string
        - name: Platform
          in: header
          description: Platform
          type: string
          enum: [ "VRP","IP" ]
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenResponseV2'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /v2/token/verify:
    post:
      tags:
        - TokenOrchestratorV2
      summary: verifyTokenV2
      operationId: verifyTokenV2UsingPOST
      security:
        - Bearer: [ ]
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: tokenRequest
          description: tokenRequest
          required: true
          schema:
            $ref: '#/definitions/TokenRequestV2'
        - name: x-yapstone-fpsid
          in: header
          description: x-yapstone-fpsid
          required: false
          type: string
        - name: x-yapstone-ipaddress
          in: header
          description: x-yapstone-ipaddress
          required: false
          type: string
        - name: x-yapstone-trace-id
          in: header
          description: x-yapstone-trace-id
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenResponseV2'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/v2/token/{tokenId}':
    get:
      tags:
        - TokenOrchestratorV2
      summary: getToken
      operationId: getTokenUsingGET
      security:
        - Bearer: [ ]
      produces:
        - application/json;charset=UTF-8
        - text/plain
      parameters:
        - name: tokenId
          in: path
          description: tokenId
          required: true
          type: string
        - name: x-yapstone-requestid
          in: header
          description: x-yapstone-requestid
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InstrumentTokenResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - TokenOrchestratorV2
      summary: deleteToken
      operationId: deleteTokenUsingDELETE
      security:
        - Bearer: [ ]
      produces:
        - application/json;charset=UTF-8
        - text/plain
      parameters:
        - name: tokenId
          in: path
          description: tokenId
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: x-yapstone-trace-id
          in: header
          description: x-yapstone-trace-id
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeleteTokenResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
definitions:
  Address:
    type: object
    properties:
      city:
        type: string
        description: city
      countryCode:
        type: string
        description: countryCode
      postalCode:
        type: string
        description: postalCode
      state:
        type: string
        description: state
      street1:
        type: string
        description: street1
      street2:
        type: string
        description: street2
      street3:
        type: string
        description: street3
    title: Address
  Bank:
    type: object
    properties:
      accountNumber:
        type: string
        description: accountNumber
      accountType:
        type: string
        description: accountType
      billingAddress:
        $ref: '#/definitions/BillingAddress'
      currency:
        type: string
        description: currency
      nameOnAccount:
        type: string
        description: nameOnAccount
      routingNumber:
        type: string
        description: routingNumber
    title: Bank
  BankAccount:
    type: object
    properties:
      accountNumber:
        type: string
        description: accountNumber
      accountType:
        type: string
        description: accountType
      currency:
        type: string
        description: currency
      routingCode:
        type: string
        description: routingCode
    title: BankAccount
  BillingAddress:
    type: object
    properties:
      city:
        type: string
        description: City of Billing Address
      countryCode:
        type: string
        description: Countrycode of Billing Address
      postalCode:
        type: string
        description: Postal code of Billing Address
      stateOrProvince:
        type: string
        description: State or Province of Billing Address
      street1:
        type: string
        description: Street1 of Billing Address
      street2:
        type: string
        description: Street2 of Billing Address
      street3:
        type: string
        description: Street3 of Billing Address
    title: BillingAddress
    description: Billing Address details
  Card:
    type: object
    properties:
      billingAddress:
        $ref: '#/definitions/BillingAddress'
      brand:
        type: string
      cardNumber:
        type: string
        description: Full 16 digit Card#
      country:
        type: string
      cvv:
        type: string
        description: Three-digit security code for the credit card
      expirationMonth:
        type: string
        description: card expiry month
      expirationYear:
        type: string
        description: card expiry year
      nameOnAccount:
        type: string
      type:
        type: string
    title: Card
    description: Credit/Debit card
  Context:
    type: object
    properties:
      type:
        type: string
        description: type
    title: Context
  CreditCard:
    type: object
    properties:
      cardNumber:
        type: string
        description: cardNumber
      cvv:
        type: string
        description: cvv
      expirationDate:
        type: string
        description: expirationDate
      postalCode:
        type: string
        description: postalCode
      type:
        type: string
        description: type
    title: CreditCard
  CreditCardAuthResponse:
    type: object
    properties:
      authResult:
        $ref: '#/definitions/Result'
      authVerificationCode:
        type: string
      avsResult:
        $ref: '#/definitions/Result'
      cvvResult:
        $ref: '#/definitions/Result'
      processor:
        type: string
        example: FD
        enum:
          - FD
          - WP
          - VN
          - FIRST_DATA
          - WORLD_PAY
          - VANTIV_SSL
      valid:
        type: boolean
    title: CreditCardAuthResponse
  DeleteTokenResponse:
    type: object
    properties:
      description:
        type: string
      status:
        type: string
    title: DeleteTokenResponse
  InstrumentTokenResponse:
    type: object
    properties:
      bank:
        $ref: '#/definitions/Bank'
      card:
        $ref: '#/definitions/Card'
      expiration:
        type: string
      id:
        type: string
      instrumentId:
        type: string
      result:
        type: string
      status:
        type: string
      token:
        $ref: '#/definitions/Token'
      tokenExpirationDate:
        type: string
      type:
        type: string
        enum:
          - PAYMENTS
          - PAYOUT
          - MARKETPLACE
          - MERCHANT
          - ASSET_LISTING
          - CUSTOMER
          - MISSING_DATA
          - DOC_REQUIRED
          - BANK_ACCOUNT
          - CARD
          - CHECK
          - PARTY
          - TOKEN
          - SINGLE_USE
          - MULTI_USE
    title: InstrumentTokenResponse
  PaymentInstrument:
    type: object
    properties:
      bankAccount:
        $ref: '#/definitions/BankAccount'
      creditCard:
        $ref: '#/definitions/CreditCard'
      nameOnAccount:
        type: string
        description: nameOnAccount
      paymentType:
        type: string
        description: Type of payment
    title: PaymentInstrument
  PaymentInstrumentV2:
    type: object
    properties:
      bank:
        $ref: '#/definitions/Bank'
      card:
        $ref: '#/definitions/Card'
      instrumentType:
        type: string
        example: CARD
        description: >-
          Credit Card(includes Debit card) or ACH or APM or of Wallet Type with
          possible values = androidpay, masterpass ,apple pay, paywithgoogle
          ,samsungpay, visacheckout
        enum:
          - CARD
          - BANK
          - APM
          - TOKEN
      returnToken:
        type: boolean
      tokenExpirationDate:
        type: string
    title: PaymentInstrumentV2
  Result:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      result:
        type: string
    title: Result
  Token:
    type: object
    properties:
      tokenId:
        type: string
    title: Token
  TokenRequest:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      authHeader:
        type: string
        description: authHeader
      context:
        $ref: '#/definitions/Context'
      deviceFingerprintId:
        type: string
        description: deviceFingerprintId
      paymentInstrument:
        $ref: '#/definitions/PaymentInstrument'
    title: TokenRequest
    description: Payload to create token for payment or personal information
  TokenRequestV2:
    type: object
    properties:
      clientCorrelationId:
        type: string
      clientUniqueTransactionId:
        type: string
      classicTokenId:
        type: string
      propertyCode:
        type: string
      paymentInstrument:
        $ref: '#/definitions/PaymentInstrumentV2'
    title: TokenRequestV2
    description: Token Request V2
  TokenResponseV2:
    type: object
    properties:
      authResponse:
        $ref: '#/definitions/CreditCardAuthResponse'
      bank:
        $ref: '#/definitions/Bank'
      card:
        $ref: '#/definitions/Card'
      clientCorrelationId:
        type: string
      clientUniqueTransactionId:
        type: string
      classicTokenId:
        type: string
      result:
        type: string
      status:
        type: string
      token:
        $ref: '#/definitions/Token'
      tokenExpirationDate:
        type: string
      verificationId:
        type: string
    title: TokenResponseV2
    description: Token Response V2
  TokenResponse:
    type: object
    properties:
      tokenId:
        type: string
