swagger: '2.0'
info:
  title: Orchestrator Payments
  version: 1.0.0
  contact:
    name: YapStone Support
    email: support@yapstone.com
  description: REST API for Payments Orchestrator

basePath: /orchestrator-payments/v2

schemes:
  - https

securityDefinitions:
  Bearer:
    description: Enter your bearer token in the format **Bearer <token>**
    in: header
    name: Authorization
    type: apiKey

paths:
  '/payments/disbursements/payment/{paymentId}':
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: unique id of original payment from Process Payment Response
          in: path
          name: paymentId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisbursePaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      description: >-
        You can disburse entire payment or, one or more line items. You can
        disburse full amount of the payment or line item. Partial disbursement
        of any line item is not supported.
      operationId: disbursePaymentById
      summary: >-
        Provides instructions from Marketplace for a payment on payout hold
        (escrow hold) to be disbursed to one or more Payees.

  '/payments/disbursements/transaction/{transactionId}':
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - in: path
          name: transactionId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisburseTransactionRequest'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      description: >-
        Change transaction from "Hold payout" state to "ready for disbursement"
        using payment transaction id.
      operationId: disburseTransactionById
      summary: >-
        Change transaction from "Hold payout" state to "ready for disbursement"
        using payment transaction id.

  /payments/instrument/verify:
    post:
      deprecated: true
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: verifyInstrumentRequest
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifyInstrumentRequest'
      responses:
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      description: >-
        Instrument Verification service allows you to verify a card before the
        checkout process.
      operationId: verifyPaymentInstrument
      summary: Verify payment instrument

  /payments/payment:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: Create Payment order.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePaymentRequest'
      responses:
        '201':
          description: Payment Successfully Processed.
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      deprecated: false
      description: >-
        Processing Marketplace payment with Marketplace details, LineItems,
        Amount. It support payment with Card, ACH, APM and Token. Payments
        support two authorization type PRIORAUTH and FINALAUTH.
      operationId: createPayment
      summary: Process Payment

  '/payments/payment/{paymentId}':
    delete:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: paymentId
          in: path
          name: paymentId
          required: true
          type: string
        - description: clientUniqueTransactionId
          in: query
          name: clientUniqueTransactionId
          required: false
          type: string
      responses:
        '200':
          description: Cancel Successful
          schema:
            $ref: '#/definitions/PaymentCancelResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable payload.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      deprecated: false
      description: Marketplace can cancel payment by payment Id.
      operationId: cancelPayment
      summary: Marketplace can cancel payment by payment Id.

    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: paymentId
          in: path
          name: paymentId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      description: Get payment details by using payment id.
      operationId: getPayment
      summary: Get with Payment Id

    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: paymentId
          in: path
          name: paymentId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CapturePaymentRequest'
      responses:
        '200':
          description: Payment Processed Successfully
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      description: >-
        Capturing and Settling funds with processor and banks for payin
        transactions
      operationId: capturePayment
      summary: Capture a prior authorized payment

  '/payments/payment/{paymentId}/updateBooking':
    patch:
      summary: Update booking information of a previously created payment.
      description: >-
        Update booking information of a previously created payment.
      operationId: updateBookingInfo
      tags:
        - payments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: paymentId
          in: path
          name: paymentId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateBookingInfoRequest'
      responses:
        '200':
          description: Payment Processed Successfully
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []

  '/payments/resumepayment/{paymentId}':
    patch:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: paymentId
          in: path
          name: paymentId
          required: true
          type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      deprecated: false
      operationId: resumePayment
      summary: Resume payment

  '/payments/transaction/{transactionId}':
    delete:
      deprecated: true
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: transactionId
          in: path
          name: transactionId
          required: true
          type: string
        - description: clientUniqueTransactionId
          in: header
          name: clientUniqueTransactionId
          required: false
          type: string
      responses:
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      description: Cancel payment transaction details by transaction id
      operationId: cancelTransaction
      summary: Cancel payment transaction details by transaction id

    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: transactionId
          in: path
          name: transactionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderTransactions'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - payments
      description: Get payment transaction details by transaction id
      operationId: getTransaction
      summary: Get payment transaction details by transaction id

  /refunds/payment:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RefundRequest'
      responses:
        '201':
          description: Successfully Refunded the Payment
          schema:
            $ref: '#/definitions/RefundResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - refunds
      description: >-
        A marketplace can cancel an existing order or request a full or partial
        refund. The cancel or refund order must be approved by risk in order to
        ensure there are no sanctioned entities
      operationId: createPaymentRefund
      summary: >-
        A marketplace can cancel an existing order or request a full or partial
        refund. The cancel or refund order must be approved by risk in order to
        ensure there are no sanctioned entities

  '/refunds/payment/{paymentId}':
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: paymentId
          in: path
          name: paymentId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RefundResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - refunds
      description: Get master payment details including all refund detail by payment id
      operationId: getRefundByPaymentId
      summary: Get master payment details including all refund detail by payment id

  '/refunds/refund/{refundId}':
    delete:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: refundId
          in: path
          name: refundId
          required: true
          type: string
      responses:
        '200':
          description: Cancel Successful
          schema:
            $ref: '#/definitions/RefundCancelResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable payload.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - refunds
      operationId: cancelRefund
      summary: Cancel Payment by payment Id

    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: refundId
          in: path
          name: refundId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RefundResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - refunds
      description: Get Master Payment
      operationId: getRefund
      summary: Get master payment details including all refund detail by Payment Id

  /refunds/transaction:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RefundResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '415':
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - refunds
      description: >-
        A marketplace can cancel an existing order or request a full or partial
        refund. The cancel or refund order must be approved by risk in order to
        ensure there are no sanctioned entities
      operationId: createTransactionRefund
      summary: Create a refund

  '/refunds/transaction/{transactionId}':
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: transactionId
          in: path
          name: transactionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad Data
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - refunds
      description: Get Master Transaction
      operationId: getByOriginalTransactionId
      summary: >-
        Get master Transaction details including all refund detail by
        Transaction Id

  '/search/payment/clientUniqueTxnId/{clientUniqueTxnId}':
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneIpAddress'
        - description: clientUniqueTransactionId
          in: path
          name: clientUniqueTxnId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - search
      description: Search payment details by using clientUniqueTxnId
      operationId: searchPaymentByClientUniqueTxnId
      summary: search Payment by clientUniqueTxnId

  '/search/payment/{paymentId}':
    get:
      deprecated: true
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneIpAddress'
        - in: path
          name: paymentId
          required: true
          type: string
      responses:
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - search
      description: Search Process Payment details with payment id.
      operationId: searchByPaymentId
      summary: Search Process Payment details with payment id.

  '/search/transaction/{transactionId}':
    get:
      deprecated: true
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/xYapstoneFpsid'
        - $ref: '#/parameters/xYapstoneIpAddress'
        - in: path
          name: transactionId
          required: true
          type: string
      responses:
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
      tags:
        - search
      description: Search transaction
      operationId: searchByTransactionId
      summary: Search with transaction id

parameters:
  xYapstoneIpAddress:
    name: x-yapstone-ipaddress
    description: IP Address of the client
    in: header
    required: false
    type: string
    x-validation-annotation-ip-address: true
    x-validation-annotation-ip-address-message: "{PO3004}"
  xYapstoneFpsid:
    name: x-yapstone-fpsid
    description: Device Finger Print Id
    in: header
    required: false
    type: string

definitions:
  APM:
    type: object
    title: APM
    required:
      - merchantRedirectURL
      - provider
    properties:
      billingAddress:
        $ref: '#/definitions/BillingAddress'
      merchantRedirectURL:
        description: Merchant Redirect URL
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO5003}"
        x-validation-required-message: "{PO5003}"
      nameOnAccount:
        type: string
      notificationURL:
        description: Notification URL
        type: string
      partnerRedirectionURL:
        description: Partner RedirectionURL
        type: string
      provider:
        description: Provider information
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO5002}"
        x-validation-required-message: "{PO5002}"
      specInParameters:
        description: specIn parameter details
        items:
          $ref: '#/definitions/APMSpecInParameters'
        type: array
      transactionType:
        description: Transaction type
        enum:
          - SOFORT
          - GIROPAY
          - ALIPAY
          - IDEAL
          - WECHATPAY
        type: string

  APMSpecInParameters:
    type: object
    title: APMSpecInParameters
    description: sample desc
    required:
      - key
      - value
    properties:
      key:
        description: sample desc
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO5006}"
        x-validation-required-message: "{PO5006}"
      value:
        description: sample desc
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO5006}"
        x-validation-required-message: "{PO5006}"

  Address:
    type: object
    title: Address
    description: Address information
    required:
      - countryCode
    properties:
      city:
        description: Name of the city
        type: string
      countryCode:
        description: ISO 2 digits country code of the address
        type: string
      postalCode:
        description: Postal code of the address
        type: string
      stateOrProvince:
        description: state or province
        type: string
      street1:
        description: Line 1 of street address
        type: string
      street2:
        description: Line 2 of street address
        type: string
      street3:
        description: Line 3 of street address
        type: string
      street4:
        description: Line 3 of street address
        type: string

  Amount:
    type: object
    title: Amount
    required:
      - currency
      - exponent
      - value
    description: Amount object
    properties:
      currency:
        type: string
        description: ISO 3 digits currency code
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1230}"
        x-validation-required-message: "{PO1230}"
      exponent:
        type: integer
        description: The number of decimal places from the right
        format: int32
        minimum: 1
        x-validation-minimum-message: "{PO1278}"
        x-validation-required-message: "{PO1232}"
      value:
        type: integer
        description: Should be greater than equal to 0
        format: int32
        minimum: 1
        x-validation-minimum-message: "{PO1277}"
        x-validation-required-message: "{PO1263}"

  AuthenticationResponse:
    description: authenticationResponse object
    properties:
      authenticationStatus:
        description: authentication Status
        enum:
          - SUCCESS
          - FAILED
          - CHALLENGE
          - ATTEMPTED
          - NONE
        type: string
      authenticationType:
        description: authentication Status
        enum:
          - THREE_DS
          - NONE
        type: string
      cavv:
        type: string
      dsTransactionId:
        type: string
      eciFlag:
        type: string
      returnUrl:
        type: string
      stepUpToken:
        type: string
      stepUpUrl:
        type: string
      threeDSVersion:
        type: string
      xid:
        type: string
    type: object
  BankAccount:
    type: object
    title: BankAccount
    required:
      - accountNumber
      - accountType
      - currency
      - routingCode
    description: Bank account
    properties:
      accountNumber:
        description: Full account number
        maxLength: 17
        type: string
        x-validation-max-length-message: "{PO3101}"
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO3101}"
        x-validation-required-message: "{PO3101}"
      accountType:
        description: Type of account (CHECKING/SAVINGS)
        type: string
        enum:
          - CHECKING
          - SAVINGS
        x-validation-required-message: "{PO1282}"
      billingAddress:
        $ref: '#/definitions/BillingAddress'
      currency:
        description: ISO 3 digits currency code of the bank account
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1230}"
        x-validation-required-message: "{PO1230}"
      iban:
        description: iban
        type: string
      nameOnAccount:
        type: string
      routingNumber:
        description: The routing transit number for the bank account
        maxLength: 9
        minLength: 9
        type: string
        x-validation-min-max-length-message: "{PO1022}"
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO3102}"
        x-validation-required-message: "{PO3102}"

  BillingAddress:
    description: Billing Address details
    title: BillingAddress
    type: object
    properties:
      city:
        description: City of Billing Address
        type: string
      countryCode:
        type: string
        description: ISO 2 digits countrycode of Billing Address
      postalCode:
        type: string
        description: Postal code of Billing Address
      stateOrProvince:
        description: State or Province of Billing Address
        type: string
      street1:
        description: Street1 of Billing Address
        type: string
      street2:
        description: Street2 of Billing Address
        type: string
      street3:
        description: Street3 of Billing Address
        type: string
      street4:
        description: Street3 of Billing Address
        type: string

  BookingInfo:
    type: object
    title: BookingInfo
    description: Booking Information
    properties:
      checkinDate:
        description: Date of Checkin
        pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
        type: string
        x-validation-pattern-message: "{PO3001}"
      checkoutDate:
        description: Date of Checkout
        pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
        type: string
        x-validation-pattern-message: "{PO3002}"
      nightlyRate:
        $ref: '#/definitions/Amount'
      nightlyTax:
        $ref: '#/definitions/Amount'
      numberOfAdults:
        description: Number of Adults
        format: int32
        type: integer
      numberOfChildren:
        description: Number of Childrens
        format: int32
        type: integer
      numberOfNights:
        description: Number of Nights
        format: int32
        type: integer
      reservationNumber:
        description: Reservation Number
        type: string

  CapturePaymentRequest:
    type: object
    title: CapturePaymentRequest
    description: Payload for capture payment
    properties:
      amount:
        $ref: '#/definitions/Amount'
      authorizationType:
        description: Authorization type
        type: string
        default: FINALAUTH
        enum:
          - FINALAUTH
          - PRIORAUTH
      transactions:
        items:
          $ref: '#/definitions/Transaction'
        type: array


  Card:
    title: Card
    type: object
    description: Credit/Debit card
    required:
      - cardNumber
      - expirationMonth
      - expirationYear
    properties:
      billingAddress:
        $ref: '#/definitions/BillingAddress'
      cardNumber:
        description: Full 16 digit Card#
        maxLength: 16
        type: string
        x-validation-max-length-message: "{PO1219}"
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1219}"
        x-validation-required-message: "{PO1219}"
      cvv:
        description: Three-digit security code for the credit card
        type: string
      expirationMonth:
        description: card expiry month
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1260}"
        x-validation-required-message: "{PO1260}"
      expirationYear:
        description: card expiry year
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1261}"
        x-validation-required-message: "{PO1261}"
      nameOnAccount:
        type: string

  CardHolderInfo:
    description: CardHolderInfo
    properties:
      accountAgeIndicator:
        type: string
      accountChangeDate:
        type: string
      accountChangeIndicator:
        type: string
      accountCreateDate:
        type: string
      accountPurchases:
        type: string
      accountPwdChangeDate:
        type: string
      accountPwdChangeIndicator:
        type: string
      addCardAttempts:
        type: string
      fraudActivity:
        type: string
      paymentAccountAge:
        type: string
      paymentAccountIndicator:
        type: string
      transactionCountDay:
        type: string
      transactionCountYear:
        type: string
    type: object
  CardResponse:
    properties:
      cardBin:
        type: string
      cardCountry:
        type: string
      cardIssuer:
        type: string
    title: CardResponse
    type: object
  Consent:
    properties:
      accepted:
        description: Indicates the acceptance of the T&Cs (Yes or No)
        type: boolean
      type:
        enum:
          - AGE
          - PAYOR_TERMS
        type: string
      version:
        format: int32
        type: integer
    type: object
  CreditCardAuthResponse:
    title: CreditCardAuthResponse
    type: object
    properties:
      authResult:
        $ref: '#/definitions/Result'
      authVerificationCode:
        type: string
      avsResult:
        $ref: '#/definitions/Result'
      cvvResult:
        $ref: '#/definitions/Result'
      errmsg:
        type: string
      errmsgDescription:
        type: string
      failReason:
        type: string
      flags:
        type: string
      fundsStatus:
        type: string
      processor:
        enum:
          - TEST
          - FD
          - WP
          - VN
          - FIRST_DATA
          - WORLD_PAY
          - VANTIV_SSL
          - PPRO
        example: FD
        type: string
      redirectSecret:
        type: string
      redirectURL:
        type: string
      requestFailReason:
        type: string
      requestStatus:
        type: string
      specouts:
        items:
          $ref: '#/definitions/SpecOutInfo'
        type: array
      tag:
        type: string

  Customer:
    description: Customer information
    properties:
      address:
        $ref: '#/definitions/Address'
      consents:
        items:
          $ref: '#/definitions/Consent'
        type: array
      customerId:
        description: ID of the customer
        type: string
      emailAddress:
        description: email address of the customer
        type: string
      externalCustomerId:
        description: External ID of the customer created from other source
        type: string
      name:
        $ref: '#/definitions/Name'
      phone:
        $ref: '#/definitions/Phone'
    title: Customer
    type: object
  CustomerData:
    description: Customer information object
    properties:
      key1:
        type: string
      key2:
        type: string
    type: object
  CustomerDetails:
    properties:
      customerId:
        type: string
      externalCustomerId:
        type: string
      name:
        $ref: '#/definitions/Name'
      riskStatus:
        $ref: '#/definitions/RiskStatus'
    title: CustomerDetails
    type: object
  Deposit:
    properties:
      accountName:
        description: Name on account
        type: string
      amount:
        description: amount information
        type: string
      currency:
        description: ISO 3 digits currency code
        type: string
      last4Account:
        description: Last 4 account number
        type: string
    type: object
  DepositDetails:
    properties:
      deposits:
        description: sample desc
        items:
          $ref: '#/definitions/Deposit'
        type: array
    type: object
  DeviceCollectionData:
    description: device collection object
    properties:
      browserColorDepth:
        type: string
      browserHeader:
        type: string
      browserJavaEnabled:
        type: boolean
      browserJavascriptEnabled:
        type: boolean
      browserLanguage:
        type: string
      browserScreenHeight:
        type: string
      browserScreenWidth:
        type: string
      browserTimeZone:
        type: string
      deviceChannel:
        type: string
      iPAddress:
        type: string
      userAgent:
        type: string
    type: object
  DisburseLineItemsReq:
    properties:
      offeringId:
        description: offering id of line items that has to be disbursed
        type: string
      offeringName:
        description: offering name of line items that has to be disbursed
        type: string
    title: DisburseLineItemsReq
    type: object
  DisburseTransaction:
    properties:
      id:
        description: Id of the original transaction from the Process Payment Response
        type: string
      lineItems:
        type: array
        items:
          $ref: '#/definitions/DisburseLineItemsReq'
    type: object
  DisburseTransactionRequest:
    properties:
      lineItems:
        type: array
        items:
          $ref: '#/definitions/DisburseLineItemsReq'
    type: object
  Disbursement:
    allOf:
      - description: sample desc
        properties:
          item:
            $ref: '#/definitions/DisbursementDetails'
        type: object
  DisbursementDetails:
    type: object
    description: sample desc
    properties:
      lineItems:
        type: array
        description: list of lineitems
        items:
          properties:
            lineItemId:
              description: Line item ID
              type: string

  DisbursementRequest:
    $ref: '#/definitions/Disbursement'

  DisbursePaymentRequest:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/DisburseTransaction'

  EntityRef:
    properties:
      id:
        description: Id for the entity reference
        maxLength: 64
        type: string
      type:
        description: Type of the entity ref
        enum:
          - MARKETPLACE
          - MERCHANT
          - PARTY
          - ASSET_LISTING
        type: string
    required:
      - id
      - type
    type: object

  Error:
    type: object
    properties:
      errorCode:
        type: string
      message:
        type: string

  ErrorResponse:
    type: object
    title: ErrorResponse
    description: Payload for error code and description.
    required:
      - code
      - status
      - message
    properties:
      code:
        description: ErrorResponse code.
        type: integer
      status:
        description: The
        type: string
      message:
        description: ErrorResponse message.
        type: string
      timestamp:
        type: string
        format: "date-time"
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'
      paymentId:
        type: string
      authenticationResponse:
        $ref: '#/definitions/AuthenticationResponse'
      authResponse:
        $ref: '#/definitions/CreditCardAuthResponse'

  Fee:
    properties:
      amount:
        $ref: '#/definitions/Amount'
      feeId:
        type: string
      feeSourceInstrumentId:
        type: string
      name:
        type: string
    title: Fee
    type: object
  Fields:
    properties:
      name:
        type: string
    title: Fields
    type: object
  GovIdentification:
    description: Customer Government Identification
    properties:
      country:
        type: string
      displayText:
        type: string
      expiration:
        description: Identification Expiration in YYYY-MM-DD
        type: string
      govIdDataToken:
        type: string
      identificationNumber:
        type: string
      identificationType:
        enum:
          - DRIVERS_LICENSE
          - SSN_LAST4
        type: string
      state:
        type: string
    type: object
  Guest:
    description: Guest customer object
    properties:
      address:
        $ref: '#/definitions/Address'
      emailAddress:
        description: email address of the customer
        type: string
      externalGuestId:
        description: External ID of the guest created from other source
        type: string
      guestId:
        description: ID of the guest
        type: string
      name:
        $ref: '#/definitions/Name'
      phone:
        $ref: '#/definitions/Phone'
      sameAsCustomer:
        default: false
        description: whether the guest and the customer is same person or not
        type: boolean
    required:
      - address
    title: Guest
    type: object
  GuestInfoResponse:
    description: Guest information object
    properties:
      externalGuestId:
        type: string
      guestId:
        type: string
    title: GuestInfoResponse
    type: object
  Href:
    properties:
      href:
        type: string
    title: Href
    type: object
  InstallmentPlan:
    description: Installment plan object
    properties:
      installmentNumber:
        description: >-
          The payment installment number from the total # of Installments (For
          instance, this may be payment #3 of 4 total installment payments
          related to the reservation)
        format: int32
        type: integer
      totalInstallments:
        description: Total Number of Installments for Reservation
        format: int32
        type: integer
    title: InstallmentPlan
    type: object
  InstrumentVerificationResponse:
    properties:
      authResponse:
        $ref: '#/definitions/CreditCardAuthResponse'
      clientCorrelationId:
        description: Client correlation identifier to an existing payment order
        maxLength: 128
        minLength: 0
        type: string
      clientUniqueTransactionId:
        description: Client Unique transaction identifier to an existing payment order
        maxLength: 128
        minLength: 0
        type: string
      result:
        type: string
      status:
        type: string
      token:
        $ref: '#/definitions/Token'
      verificationId:
        type: string
    title: InstrumentVerificationResponse
    type: object
  KYC:
    properties:
      dateOfBirth:
        type: string
      govIdentification:
        $ref: '#/definitions/GovIdentification'
      mobilePhone:
        $ref: '#/definitions/Phone'
    title: Payer
    type: object
  LeaseInfo:
    description: Lease information
    properties:
      leaseDuration:
        description: Lease Duration
        type: string
      leaseEnd:
        description: Lease end date in YYYY-MM-DD
        pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
        type: string
        x-validation-pattern-message: "{PO3009}"
      leaseStart:
        description: Lease start date in YYYY-MM-DD
        pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
        type: string
        x-validation-pattern-message: "{PO3008}"
    title: LeaseInfo
    type: object
  LineItemDetails:
    title: LineItemDetails
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      fees:
        items:
          $ref: '#/definitions/Fee'
        type: array
      lineItemId:
        type: string
      offeringId:
        type: string
      offeringName:
        type: string
      settlementStatus:
        type: string


  MarketplaceData:
    type: object
    title: MarketplaceData
    description: Marketplace data object
    required:
      - marketplaceType
    properties:
      assetListingId:
        description: ID of the asset listing
        type: string
      marketplaceType:
        description: Type of marketplace
        enum:
          - RENT
          - VACATION_RENT
          - ECOMM
        type: string
        x-validation-required-message: "{PO1253}"
      payeeEntityRef:
        $ref: '#/definitions/EntityRef'
      rentalInfo:
        $ref: '#/definitions/RentalInfo'
      reservationChannel:
        type: string
        description: Client correlation identifier to an existing payment order
        maxLength: 25
        minLength: 1
        x-validation-min-max-length-message: "{PO3022}"
      vacationRentalInfo:
        $ref: '#/definitions/VacationRentalInfoRequest'

  MerchantRiskIndicatorInfo:
    description: CardHolderInfo
    properties:
      giftCardAmount:
        type: string
      giftCardCount:
        type: string
      giftCardCurrencyCode:
        type: string
      preOrderDate:
        type: string
      preOrderIndicator:
        type: string
      reorderIndicator:
        type: string
    type: object
  Marketplace:
    properties:
      vacationRentalInfo:
        $ref: '#/definitions/VacationRentalInfo'
    title: Merketplace
    type: object
  Money:
    properties:
      currency:
        description: ISO 3 digits currency code
        type: string
      value:
        description: Amount
        type: integer
    type: object
  Name:
    type: object
    title: Name
    description: name of market place
    required:
      - first
      - last
    properties:
      additionalLast:
        description: Second last name for the Payer
        type: string
      first:
        description: Payer first name
        maxLength: 100
        type: string
        x-validation-max-length-message: "{PO1225}"
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1225}"
        x-validation-required-message: "{PO1225}"
      honorificPrefix:
        description: Customer's Salutation string
        type: string
      honorificSuffix:
        description: Title for the customer
        type: string
      last:
        description: Payer last name
        maxLength: 100
        type: string
        x-validation-max-length-message: "{PO1226}"
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1226}"
        x-validation-required-message: "{PO1226}"
      middle:
        description: Payer middle name
        type: string

  OfferingDetails:
    type: object
    title: OfferingDetails
    properties:
      amount:
        $ref: '#/definitions/Amount'
      offeringId:
        description: Id of the offer provided by YapStone
        type: string
      offeringName:
        type: string
        description: Name of the offer provided by YapStone

  OrderTransactions:
    title: OrderTransactions
    type: object
    properties:
      authResponse:
        $ref: '#/definitions/CreditCardAuthResponse'
      lineItems:
        type: array
        items:
          $ref: '#/definitions/LineItemDetails'
      reason:
        type: string
      transactionId:
        type: string
      transactionStatus:
        $ref: '#/definitions/Status'
      transactionType:
        type: string

  Payment:
    properties:
      paymentInstrument:
        $ref: '#/definitions/PaymentInstrumentResponse'
      reason:
        type: string
      status:
        $ref: '#/definitions/Status'
      transactions:
        description: ''
        type: array
        items:
          $ref: '#/definitions/OrderTransactions'
    title: Payment
    type: object
  PaymentCancelResponse:
    properties:
      clientUniqueTransactionId:
        description: clientUniqueTransactionId
        type: string
      paymentId:
        description: paymentId
        type: string
      status:
        $ref: '#/definitions/Status'
      transactions:
        description: ''
        type: array
        items:
          $ref: '#/definitions/PaymentCancelTransactionResponse'
    title: PaymentCancelResponse
    type: object
  PaymentCancelTransactionResponse:
    properties:
      clientUniqueTransactionId:
        description: clientUniqueTransactionId
        type: string
      refundTransactions:
        description: ''
        type: array
        items:
          $ref: '#/definitions/RefundTransactions'
      response:
        description: Response
        type: string
      transactionId:
        description: Transaction Id
        type: string
    title: PaymentCancelTransactionResponse
    type: object

  PaymentDetails:
    type: object
    title: PaymentDetails
    description: Entity of the payee on whom behalf the payment is processed
    properties:
      amount:
        $ref: '#/definitions/Amount'
      authorizationType:
        default: FINALAUTH
        description: Authorization type
        type: string
        enum:
          - FINALAUTH
          - PRIORAUTH
      customSoftDescriptor:
        description: customer soft descriptor
        maxLength: 22
        type: string
        x-validation-max-length-message: "{PO3017}"
      installmentPlan:
        $ref: '#/definitions/InstallmentPlan'
      instrumentOwner:
        default: true
        description: value based on customer is actual payer or not
        type: boolean
      lineItems:
        description: list of line items
        items:
          $ref: '#/definitions/OfferingDetails'
        type: array
      paymentInstrument:
        $ref: '#/definitions/PaymentInstrument'

  PaymentInstrument:
    type: object
    required:
      - instrumentType
    properties:
      apm:
        $ref: '#/definitions/APM'
      bank:
        $ref: '#/definitions/BankAccount'
      card:
        $ref: '#/definitions/Card'
      externalInstrumentId:
        description: accept instrumentId created from other source.
        type: string
      instrumentType:
        description: >-
          Credit Card(includes Debit card) or ACH or APM or of Wallet Type with
          possible values = androidpay, masterpass ,apple pay, paywithgoogle
          ,samsungpay, visacheckout Type will be TOKEN , if the instrument data
          is verified and token is generated.
        enum:
          - CARD
          - BANK
          - APM
          - TOKEN
        type: string
        x-validation-required-message: "{PO1152}"
      kyc:
        $ref: '#/definitions/KYC'
      returnToken:
        type: boolean
      token:
        $ref: '#/definitions/TokenReq'
      tokenExpirationDate:
        description: life span of a token
        type: string

  PaymentInstrumentCard:
    type: object
    required:
      - instrumentType
    properties:
      card:
        $ref: '#/definitions/Card'
      instrumentType:
        description: >-
          Credit Card(includes Debit card) or ACH or APM or of Wallet Type with
          possible values = androidpay, masterpass ,apple pay, paywithgoogle
          ,samsungpay, visacheckout Type will be TOKEN , if the instrument data
          is verified and token is generated.
        enum:
          - CARD
          - BANK
          - APM
          - TOKEN
        example: CARD
        type: string
        x-validation-required-message: "{PO1285}"
      returnToken:
        default: false
        type: boolean
      tokenExpirationDate:
        description: life span of a token
        type: string

  PaymentInstrumentResponse:
    type: object
    properties:
      instrumentType:
        type: string
      token:
        $ref: '#/definitions/Token'
    title: PaymentInstrumentResponse

  PaymentLineItem:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Money'
      fees:
        items:
          properties:
            amount:
              $ref: '#/definitions/Money'
            lineItemId:
              description: Line item ID
              type: string
        type: array
      holdPayout:
        description: Flag to hold payment for disbursement
        type: boolean
      lineItemId:
        description: Line item ID
        type: string

  PaymentPayment:
    type: object
    properties:
      depositDetails:
        type: array
        items:
          $ref: '#/definitions/DepositDetails'
      lineItems:
        type: array
        items:
          $ref: '#/definitions/PaymentLineItem'
      payinTransactions:
        type: array
        items:
          properties:
            transaction:
              $ref: '#/definitions/Transaction'
      paymentId:
        description: payment ID
        type: string
      payoutTransactions:
        type: array
        items:
          properties:
            transaction:
              $ref: '#/definitions/Transaction'
      totalAmount:
        $ref: '#/definitions/Money'

  PaymentResponse:
    title: PaymentResponse
    type: object
    properties:
      paymentId:
        type: string
      refundId:
        type: string
      action:
        type: string
      authenticationData:
        $ref: '#/definitions/AuthenticationResponse'
      clientCorrelationId:
        type: string
      clientUniqueTransactionId:
        type: string
      customData:
        additionalProperties:
          type: string
        type: object
      customer:
        $ref: '#/definitions/CustomerDetails'
      marketplace:
        $ref: '#/definitions/Marketplace'
      payment:
        $ref: '#/definitions/Payment'

  Phone:
    type: object
    title: Phone
    description: 'Provide country dialling,ext. and phone number'
    required:
      - countryDialingCode
    properties:
      countryDialingCode:
        description: Country dialing code
        format: int32
        minimum: 0
        type: integer
        x-validation-minimum-message: "{PO3015}"
        x-validation-required-message: "{PO3015}"
      extension:
        description: Phone extension
        format: int32
        type: integer
      number:
        description: The customer's phone number
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO3012}"

  CreatePaymentRequest:
    type: object
    title: CreatePaymentRequest
    description: Process payment object
    required:
      - channel
    properties:
      channel:
        default: API
        description: Channel through which transaction is getting triggerred.
        enum:
          - ANY
          - DEFAULT
          - ONLINE
          - PHONE
          - API
          - FAX
          - IN_PERSON
          - AUTO_PAY
          - IVR
          - TEXT_MESSAGE
          - CASH
          - EMAIL
          - MOBILE
          - MOTO
        type: string
        x-validation-required-message: "{PO1251}"
      clientCorrelationId:
        description: Client correlation identifier to an existing payment order
        maxLength: 128
        pattern: '^[a-zA-Z0-9/-]*$'
        type: string
        x-validation-max-length-message: "{PO1250}"
        x-validation-pattern-message: "{PO1250}"
      clientUniqueTransactionId:
        description: Client Unique TransactionId used to identify duplicate request.
        maxLength: 128
        pattern: '^[a-zA-Z0-9/-]*$'
        type: string
        x-validation-max-length-message: "{PO1252}"
        x-validation-pattern-message: "{PO1252}"
      customData:
        type: object
        additionalProperties:
          type: string
      customer:
        $ref: '#/definitions/Customer'
      deviceCollectionData:
        $ref: '#/definitions/DeviceCollectionData'
      isFeeRequired:
        default: false
        description: whether the fee is required or not for payments
        type: boolean
      marketplace:
        $ref: '#/definitions/MarketplaceData'
      paymentDetails:
        $ref: '#/definitions/PaymentDetails'
      threeDS:
        $ref: '#/definitions/ThreeDS'

  PropertyInfo:
    type: object
    title: PropertyInfo
    description: Property information object
    required:
      - externalPropertyId
    properties:
      address:
        $ref: '#/definitions/Address'
      externalPropertyId:
        description: Id of the external property
        pattern: '^[a-zA-Z0-9-:]*$'
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1268}"
        x-validation-required-message: "{PO1268}"
        x-validation-pattern-message: "{PO1268}"
      propertyName:
        description: Name of the property
        type: string
  PropertyInfoResponse:
    description: Property information object
    properties:
      externalPropertyId:
        type: string
      propertyId:
        type: string
    title: PropertyInfoResponse
    type: object
  RefundAction:
    enum:
      - REFUND_CREATED
    example: REFUND_CREATED
    title: RefundAction
    type: string
  RefundCancelResponse:
    properties:
      refundId:
        description: refundId
        type: string
      status:
        $ref: '#/definitions/Status'
      transactions:
        description: ''
        items:
          $ref: '#/definitions/RefundCancelTransactionResponse'
        type: array
    title: RefundCancelResponse
    type: object
  RefundCancelTransactionResponse:
    properties:
      response:
        description: Response
        type: string
      transactionId:
        description: Transaction Id
        type: string
    title: PaymentCancelTransactionResponse
    type: object
  RefundRequest:
    type: object
    title: RefundRequest
    description: Refund request object
    required:
      - paymentId
    properties:
      amount:
        $ref: '#/definitions/Amount'
      clientCorrelationId:
        description: Client correlation identifier to an existing payment order
        maxLength: 128
        minLength: 0
        type: string
      clientUniqueTransactionId:
        description: clientUniqueTransactionId used to identify duplicate request
        type: string
      paymentId:
        type: string
        x-validation-annotation-not-blank: true
        x-validation-annotation-not-blank-message: "{PO1164}"
        x-validation-required-message: "{PO1164}"
      transactions:
        items:
          $ref: '#/definitions/Transaction'
        type: array

  RefundResponse:
    properties:
      action:
        $ref: '#/definitions/RefundAction'
      clientCorrelationId:
        type: string
      clientUniqueTransactionId:
        type: string
      paymentId:
        type: string
      reason:
        type: string
      refundId:
        type: string
      refundTransactions:
        description: ''
        items:
          $ref: '#/definitions/RefundTransactions'
        type: array
      status:
        $ref: '#/definitions/Status'
    title: RefundResponse
    type: object
  RefundStatus:
    enum:
      - INITIAL
      - NEW
      - CHECK_FUNDS
      - CANCELLED
      - PENDING_PROBATION
      - PENDING_CYCLE
      - IN_CYCLE
      - RETURNED
      - PROCESSING_ERROR
      - EXPIRED
      - SENT_FOR_CAPTURE
      - CAPTURE_APPROVED
      - CAPTURE_DECLINED
      - AUTH_APPROVED
      - READY_FOR_CAPTURE
      - UNRECONCILED
      - RECONCILED
      - AUTH_DECLINED
      - HOLD
      - RELEASING_HOLD
      - CANCELLING
      - RISK_HOLD
      - CAPTURE_HOLD
      - FAILED
      - SETTLED_TO_YS
      - ACCEPTED
      - REFUNDED_BY_MERCHANT
      - RISK_DECLINED
      - NO_CYCLE_IDENTIFIED
      - DECLINED
      - PENDING_RECONCILE
      - UPDATING_HOLD
      - OVERDRAFT_REVIEW
      - REVIEW
      - AUTHENTICATION_SUCCESS
      - AUTHENTICATION_FAILED
      - AUTHENTICATION_PENDING
      - PROCESSING
      - DUPLICATE
      - COMPLETED
      - APPROVED
    example: ACTIVE
    title: RefundStatus
    type: string
  RefundTransactions:
    properties:
      clientUniqueTransactionId:
        description: clientUniqueTransactionId
        type: string
      lineItems:
        description: ''
        items:
          $ref: '#/definitions/LineItemDetails'
        type: array
      refundId:
        type: string
      refundTransactionId:
        type: string
      status:
        $ref: '#/definitions/RefundStatus'
      transactionType:
        type: string
    title: RefundTransactions
    type: object
  RentalInfo:
    type: object
    title: RentalInfo
    description: Rental information
    properties:
      leaseInfo:
        $ref: '#/definitions/LeaseInfo'
      propertyInfo:
        $ref: '#/definitions/PropertyInfo'
      renter:
        $ref: '#/definitions/Renter'

  Renter:
    description: Renter object
    properties:
      address:
        $ref: '#/definitions/Address'
      emailAddress:
        description: email address of the customer
        type: string
      externalRenterId:
        description: External ID of the renter created from different sources
        type: string
      name:
        $ref: '#/definitions/Name'
      phone:
        $ref: '#/definitions/Phone'
      renterId:
        description: ID of the renter
        type: string
      sameAsCustomer:
        default: false
        description: whether the renter and the customer is same person or not
        type: boolean
    title: Renter
    type: object
  Resolution:
    properties:
      object:
        $ref: '#/definitions/Href'
    title: Resolution
    type: object
  Result:
    properties:
      code:
        type: string
      description:
        type: string
      result:
        type: string
    title: Result
    type: object
  RiskStatus:
    properties:
      sanctionedEntities:
        $ref: '#/definitions/SanctionedEntities'
    title: RiskStatus
    type: object
  SanctionedEntities:
    properties:
      triggers:
        description: ''
        items:
          $ref: '#/definitions/Triggers'
        type: array
      verdict:
        type: string
    title: SanctionedEntities
    type: object
  SearchPaymentResponse:
    properties:
      items:
        $ref: '#/definitions/PaymentPayment'
    type: object
  SpecOutInfo:
    properties:
      key:
        type: string
      value:
        type: string
    title: SpecOutInfo
    type: object
  StackTraceElement:
    description: sample desc
    properties:
      className:
        description: sample desc
        type: string
      fileName:
        description: sample desc
        type: string
      lineNumber:
        description: sample desc
        format: int32
        type: integer
      methodName:
        description: sample desc
        type: string
      nativeMethod:
        description: sample desc
        type: boolean
    title: StackTraceElement
    type: object
  Status:
    enum:
      - INITIAL
      - NEW
      - CHECK_FUNDS
      - CANCELLED
      - PENDING_PROBATION
      - PENDING_CYCLE
      - IN_CYCLE
      - RETURNED
      - PROCESSING_ERROR
      - EXPIRED
      - SENT_FOR_CAPTURE
      - CAPTURE_APPROVED
      - CAPTURE_DECLINED
      - AUTH_APPROVED
      - READY_FOR_CAPTURE
      - UNRECONCILED
      - RECONCILED
      - AUTH_DECLINED
      - HOLD
      - RELEASING_HOLD
      - CANCELLING
      - RISK_HOLD
      - CAPTURE_HOLD
      - FAILED
      - SETTLED_TO_YS
      - ACCEPTED
      - REFUNDED_BY_MERCHANT
      - RISK_DECLINED
      - NO_CYCLE_IDENTIFIED
      - DECLINED
      - PENDING_RECONCILE
      - UPDATING_HOLD
      - OVERDRAFT_REVIEW
      - REVIEW
      - AUTHENTICATION_SUCCESS
      - AUTHENTICATION_FAILED
      - AUTHENTICATION_PENDING
      - PROCESSING
      - DUPLICATE
      - COMPLETED
      - PENDING
      - PENDING_APPROVAL
      - PROCESSING_FEES
      - PROCESSING_PDS
    example: NEW
    title: Status
    type: string
  ThreeDS:
    description: authentication object
    properties:
      cardHolderInfo:
        $ref: '#/definitions/CardHolderInfo'
      cavv:
        type: string
      dFReferenceId:
        type: string
      dsTransactionId:
        type: string
      eciFlag:
        type: string
      executeThreeDS:
        type: boolean
      merchantRiskIndicatorInfo:
        $ref: '#/definitions/MerchantRiskIndicatorInfo'
      returnUrl:
        type: string
      stepUpToken:
        type: string
      threeDSVersion:
        type: string
      xid:
        type: string
    type: object
  Token:
    description: Token object
    properties:
      card:
        $ref: '#/definitions/CardResponse'
      tokenId:
        description: token id
        type: string
    type: object
  TokenReq:
    description: TokenReq object
    properties:
      returnToken:
        type: boolean
      tokenId:
        description: token id
        type: string
    type: object
  Transaction:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      lineItems:
        description: list of line items
        type: array
        items:
          $ref: '#/definitions/OfferingDetails'
      transactionId:
        description: Transaction Id
        type: string

  TransactionResponse:
    title: TransactionRefund
    type: object
    properties:
      clientUniqueTransactionId:
        type: string
      id:
        type: string
      lineItems:
        description: ''
        type: array
        items:
          $ref: '#/definitions/LineItemDetails'
      orderId:
        type: string
      status:
        $ref: '#/definitions/RefundStatus'
      transactionType:
        type: string

  Triggers:
    properties:
      fields:
        description: ''
        items:
          $ref: '#/definitions/Fields'
        type: array
      resolution:
        $ref: '#/definitions/Resolution'
      type:
        type: string
    title: Triggers
    type: object
  VacationRentalInfo:
    properties:
      guestInfo:
        $ref: '#/definitions/GuestInfoResponse'
      propertyInfo:
        $ref: '#/definitions/PropertyInfoResponse'
    title: VacationRentalInfo
    type: object
  VacationRentalInfoRequest:
    properties:
      bookingInfo:
        $ref: '#/definitions/BookingInfo'
      guestInfo:
        $ref: '#/definitions/Guest'
      propertyInfo:
        $ref: '#/definitions/PropertyInfo'
    title: VacationRentalInfoRequest
    type: object
  VerifyInstrumentRequest:
    description: Instrument verification request
    properties:
      clientCorrelationId:
        description: Client correlation identifier to an existing payment order
        maxLength: 128
        minLength: 0
        type: string
      clientUniqueTransactionId:
        type: string
      paymentInstrument:
        $ref: '#/definitions/PaymentInstrumentCard'
    title: VerifyInstrument
    type: object

  UpdateBookingInfoRequest:
    type: object
    properties:
      checkinDate:
        description: Date of Checkin
        pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
        type: string
        x-validation-pattern-message: "{PO3001}"
      checkoutDate:
        description: Date of Checkout
        pattern: '([0-9]{4})-([0-9]{2})-([0-9]{2})'
        type: string
        x-validation-pattern-message: "{PO3002}"
      reservationNumber:
        description: Reservation Number
        type: string

x-components:
  requestBodies:
    DisbursementRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DisbursementRequest'
      description: Disbursement request info
      required: true
    RefundRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/RefundRequest'
      description: Refund request info
      required: true
