swagger: '2.0'
info:
  title: YapStone Payout Composite Service
  description: |
    This service provides a standalone Payout engine that enables a Marketplace to distribute payments to its merchants
    using a pooled aggregate funding model. Each *Payee* is defined using the YapStone *Staged Onboarding* APIs by
    creating a new `Contract` resource, effectively linking a valid `Party` (recipient) with a corresponding
    `Instrument` (bank account) and enabling the *Standalone Payout* feature.<br/>
    The Marketplace may use the `/deposits` endpoint to send an advice of a pending funding transaction. Upon receipt
    of a deposit advice, the service will begin to accept requests for outbound payments via the `/disbursements`
    endpoint. The corresponding transactions will be processed on a same-day basis when the associated Marketplace
    account has been properly funded in advance. Otherwise, good funds are pooled in the Marketplace account after a
    deposit has been confirmed via the acquiring bank (generally 1-3 days).<br/>
    The service also supports the recapture of funds via the `/reimbursements` endpoint. Reimbursement transactions for
    some currencies are allowed only if a valid __mandate__ has been established for the corresponding account. <br/>
    Deposits, disbursements, and reimbursments may be cancelled by request from the Marketplace within a configurable
    probationary period by calling the corresponding endpoint (e.g. `/deposits/{depositId}/cancel`). In addition,
    payment transactions may be reversed via the `/disbursements/{transactionId}/reverse` endpoint, resulting in a
    linked offsetting debit transaction against the original payee account (assuming a prior mandate where necessary).
    In this case, multiple partial reimbursements will be accepted if the total amount does not exceed the original
    disbursement amount.
  version: v1

produces:
  - application/json
consumes:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      Bearer authorization

basePath: "/payout-composite/api/v1"

paths:
  /balances:
    get:
      tags:
        - balances
      summary: Fetch a summary of current funding position by currency
      description: |
        Retrieves the funding position for the Marketplace for each supported currency. If the optional query parameter
        is provided, the response will include only the specified currency (EUR, GBP, CAD, USD).
      operationId: getBalances
      security:
        - Bearer: []
      parameters:
        - in: query
          name: marketplaceId
          description: Optional Marketplace Id to filter the balances. If not provided default marketplace from app token will be used
          required: false
          type: string
          maxLength: 64
          x-validation-max-length-message: "{PC015.1}"
        - name: currency
          in: query
          description: The currency for the balance inquiry (returns all by default)
          required: false
          type: string
          maxLength: 3
          x-validation-max-length-message: "{PC003.1}"
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/PoolListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  /deposits:
    post:
      tags:
        - deposits
      summary: Create pending deposit advice
      description: |
        Notifies YapStone that a deposit has been initiated by the Marketplace to provide funds for future disbursement
        requests. This call will create a pending deposit record that will be cleared when the corresponding
        transaction is confirmed by the acquiring bank (typically 1-3 days). Disbursement requests received against
        pending funds will be released for processing when the deposit is cleared.
      operationId: createDeposit
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Request describes one or more pending deposits for the given currency.
          required: true
          x-validation-required-message: "{PC008.0}"
          schema:
            $ref: '#/definitions/DepositRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/DepositResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/deposits/status/{currentStatus}':
      get:
        tags:
          - deposits
        summary: get deposits with current status.
        description: |
          Return all deposits with matching current status
        operationId: getDepositsByStatus
        security:
          - Bearer: []
        parameters:
         -  name: currentStatus
            in: path
            description: deposit status
            required: true
            type: string
            maxLength: 32
            x-validation-max-length-message: "{PC020.1}"
            x-validation-required-message: "{PC020.0}"
         -  name: marketplaceId
            in: query
            description: Marketplace identifier
            required: false
            type: string
            maxLength: 64
            x-validation-max-length-message: "{PC015.1}"
         -  name: fromDate
            in: query
            description: from date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: toDate
            in: query
            description: to date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: pageNbr
            in: query
            description: page number
            type: integer
            format: int32
            minimum: 0
            default: 0
            x-validation-minimum-message: "{PC021.1}"
         -  name: pageSize
            in: query
            description: Maximum number of records to return per page
            type: integer
            format: int32
            minimum: 0
            maximum: 100
            default: 10
            x-validation-minimum-message: "{PC022.1}"
            x-validation-maximum-message: "{PC022.2}"
        responses:
          '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/DepositResponse'
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'

  '/deposits/correlation/{clientCorrelationId}':
      get:
        tags:
          - deposits
        summary: get all deposits with clientCorrelationId.
        description: |
          Return all deposits with matching clientCorrelationId
        operationId: getDepositsByCorrelationId
        security:
          - Bearer: []
        parameters:
         -  name: clientCorrelationId
            in: path
            description: return clientCorrelationId
            required: true
            type: string
            maxLength: 128
            x-validation-max-length-message: "{PC014.1}"
            x-validation-required-message: "{PC014.0}"
         -  name: marketplaceId
            in: query
            description: Marketplace identifier
            required: false
            type: string
            maxLength: 64
            x-validation-max-length-message: "{PC015.1}"
         -  name: fromDate
            in: query
            description: from date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: toDate
            in: query
            description: to date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: pageNbr
            in: query
            description: page number
            type: integer
            format: int32
            minimum: 0
            default: 0
            x-validation-minimum-message: "{PC021.1}"
         -  name: pageSize
            in: query
            description: Maximum number of records to return per page
            type: integer
            format: int32
            minimum: 0
            maximum: 100
            default: 10
            x-validation-minimum-message: "{PC022.1}"
            x-validation-maximum-message: "{PC022.2}"
        responses:
          '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/DepositResponse'
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'

  '/deposits/correlation/{clientCorrelationId}/status/{currentStatus}':
      get:
        tags:
          - deposits
        summary: get deposits with correlationId and status.
        description: |
          Returns all deposits matching correlation id and status
        operationId: getDepositsByCorrelationIdAndStatus
        security:
          - Bearer: []
        parameters:
          - name: clientCorrelationId
            in: path
            description: clientCorrelationId
            required: true
            type: string
            maxLength: 128
            x-validation-max-length-message: "{PC014.1}"
            x-validation-required-message: "{PC014.0}"
          - name: currentStatus
            in: path
            description: current status of the deposit
            required: true
            type: string
            maxLength: 32
            x-validation-max-length-message: "{PC020.1}"
            x-validation-required-message: "{PC020.0}"
          - name: marketplaceId
            in: query
            description: Marketplace identifier
            required: false
            type: string
            maxLength: 64
            x-validation-max-length-message: "{PC015.1}"
          - name: fromDate
            in: query
            description: from date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
          - name: toDate
            in: query
            description: to date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
          - name: pageNbr
            in: query
            description: page number
            type: integer
            format: int32
            minimum: 0
            default: 0
            x-validation-minimum-message: "{PC021.1}"
          - name: pageSize
            in: query
            description: Maximum number of records to return per page
            type: integer
            format: int32
            minimum: 0
            maximum: 100
            default: 10
            x-validation-minimum-message: "{PC022.1}"
            x-validation-maximum-message: "{PC022.2}"
        responses:
          '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/DepositResponse'
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'

  '/deposits/clientId/{clientUniqueTxnId}':
      get:
        tags:
          - deposits
        summary: get deposits with clientUniqueTxnId.
        description: |
          Returns all deposits matching clientUniqueTxnId
        operationId: getDepositsByClientId
        security:
          - Bearer: []
        parameters:
         -  name: clientUniqueTxnId
            in: path
            description: client unique deposit transaction Id
            required: true
            type: string
            maxLength: 128
            x-validation-max-length-message: "{PC013.1}"
            x-validation-required-message: "{PC013.0}"
         -  name: marketplaceId
            in: query
            description: Marketplace identifier
            required: false
            type: string
            maxLength: 64
            x-validation-max-length-message: "{PC015.1}"
         -  name: fromDate
            in: query
            description: from date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: toDate
            in: query
            description: to date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: pageNbr
            in: query
            description: page number
            type: integer
            format: int32
            minimum: 0
            default: 0
            x-validation-minimum-message: "{PC021.1}"
         -  name: pageSize
            in: query
            description: Maximum number of records to return per page
            type: integer
            format: int32
            minimum: 0
            maximum: 100
            default: 10
            x-validation-minimum-message: "{PC022.1}"
            x-validation-maximum-message: "{PC022.2}"
        responses:
          '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/DepositResponse'
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'

  '/deposits/currency/{currency}':
      get:
        tags:
          - deposits
        summary: get deposits with currency.
        description: |
          Returns all deposits matching currency
        operationId: getDepositsByCurrency
        security:
          - Bearer: []
        parameters:
         -  name: currency
            in: path
            description: currency
            required: true
            type: string
            maxLength: 3
            x-validation-max-length-message: "{PC003.1}"
            x-validation-required-message: "{PC003.0}"
         -  name: marketplaceId
            in: query
            description: Marketplace identifier
            required: false
            type: string
            maxLength: 64
            x-validation-max-length-message: "{PC015.1}"
         -  name: fromDate
            in: query
            description: from date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: toDate
            in: query
            description: to date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: pageNbr
            in: query
            description: page number
            type: integer
            format: int32
            minimum: 0
            default: 0
            x-validation-minimum-message: "{PC021.1}"
         -  name: pageSize
            in: query
            description: Maximum number of records to return per page
            type: integer
            format: int32
            minimum: 0
            maximum: 100
            default: 10
            x-validation-minimum-message: "{PC022.1}"
            x-validation-maximum-message: "{PC022.2}"
        responses:
          '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/DepositResponse'
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'

  '/deposits/bankReference/{bankReferenceTag}':
      get:
        tags:
          - deposits
        summary: get all deposits with bankReferenceTag.
        description: |
          Returns all deposits matching given bankReferenceTag
        operationId: getDepositsByBankReferenceTag
        security:
          - Bearer: []
        parameters:
         -  name: bankReferenceTag
            in: path
            description: bankReferenceTag
            required: true
            type: string
            minLength: 5
            maxLength: 32
            x-validation-required-message: "{PC001.0}"
            x-validation-min-max-length-message: "{PC001.1}"
         -  name: marketplaceId
            in: query
            description: Marketplace identifier
            required: false
            type: string
            maxLength: 64
            x-validation-max-length-message: "{PC015.1}"
         -  name: fromDate
            in: query
            description: from date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: toDate
            in: query
            description: to date. Format YYYY-MM-DD
            required: false
            type: string
            format: date
         -  name: pageNbr
            in: query
            description: page number
            type: integer
            format: int32
            minimum: 0
            default: 0
            x-validation-minimum-message: "{PC021.1}"
         -  name: pageSize
            in: query
            description: Maximum number of records to return per page
            type: integer
            format: int32
            minimum: 0
            maximum: 100
            default: 10
            x-validation-minimum-message: "{PC022.1}"
            x-validation-maximum-message: "{PC022.2}"
        responses:
          '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/DepositResponse'
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'

  '/deposits/{depositId}':
    get:
      tags:
        - deposits
      summary: Fetch a single deposit
      description: Returns the deposit detail and status history for the given `depositId`
      operationId: getDeposit
      security:
        - Bearer: []
      parameters:
        - in: path
          name: depositId
          description: Primary key for a single deposit record (assigned by YapStone)
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC023.0}"
          x-validation-max-length-message: "{PC023.1}"
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
    put:
      tags:
        - deposits
      summary: Update a pending deposit advice
      description: |
        Allows a Marketplace to update the details for a pending deposit advice to correct these values relative to
        the original `post` operation. Note that the new values will overwrite the existing deposit, and all must be
        provided by the caller (presumably after a corresponding `get` operation). If the deposit has already been
        processed then the update request will be rejected (`400 Bad request`).
      operationId: updateDeposit
      security:
        - Bearer: []
      parameters:
        - in: path
          name: depositId
          description: Primary key for a single deposit record (assigned by YapStone)
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC023.0}"
          x-validation-max-length-message: "{PC023.1}"
        - in: body
          name: body
          description: Request provides replacement values (overwrite) for the given deposit.
          required: true
          x-validation-required-message: "{PC008.0}"
          schema:
            $ref: '#/definitions/DepositDetail'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/depositToken/currency/{currency}':
    get:
      tags:
      - deposits
      summary: Fetch the deposit token for the currency
      description: Returns the deposit Token for the given `currency`
      operationId: getDepositToken
      security:
      - Bearer: []
      parameters:
      - in: path
        name: currency
        description: Currency associated with deposit token (assigned by YapStone)
        required: true
        type: string
        maxLength: 3
        x-validation-required-message: "{PC003.0}"
        x-validation-max-length-message: "{PC003.1}"
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DepositToken'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

    patch:
      tags:
        - deposits
      summary: Generates a new deposit token
      description: |
       Generates a new deposit token for the currency provided if it has not been processed on the same day. Note that
        we cannot process the request more than once in a day.
      operationId: updateDepositToken
      security:
        - Bearer: []
      parameters:
        - in: path
          name: currency
          description: currency
          required: true
          type: string
          maxLength: 3
          x-validation-required-message: "{PC003.0}"
          x-validation-max-length-message: "{PC003.1}"
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DepositToken'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  '/deposits/{depositId}/cancel':
    patch:
      tags:
      - deposits
      summary: Cancel a pending deposit advice
      description: |
        Cancels the given deposit advice if it has not yet been processed. Note that a deposit advice cannot be
        cancelled after it has been reconciled via the corresponding bank account activity record.
      operationId: cancelDeposit
      security:
      - Bearer: []
      parameters:
      - in: path
        name: depositId
        description: deposit Id
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC023.0}"
        x-validation-max-length-message: "{PC023.1}"
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Empty'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  /disbursements:
    post:
      tags:
        - disbursements
      summary: Submit on-demand disbursements for the given Payees
      description: |
        Provides instructions from the Marketplace for payments to be distributed to one or more Payees. Disbursement
        requests are grouped by currency, given that the funding pools are also segregated in this manner. If the
        corresponding pool was funded in advance, the disbursements will be processed on a same-day basis. Otherwise
        the disbursement requests will be queued for later processing as funds become available. <br/>
        Response is organized in two collections (`accepted` and `rejected`) to distinguish successful and failed items.
      operationId: createDisbursement
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Disbursement request
          required: true
          x-validation-required-message: "{PC009.0}"
          schema:
            $ref: '#/definitions/DisbursementRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/DisbursementResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/{transactionId}':
    get:
      tags:
        - disbursements
      summary: Fetch a single disbursement
      description: Returns the disbursement detail and status history for the given `transactionId`
      operationId: getDisbursement
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          description: Primary key for a single disbursement record (assigned by YapStone)
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC018.0}"
          x-validation-max-length-message: "{PC018.1}"
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Disbursement'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  '/disbursements/{transactionId}/cancel':
    patch:
      tags:
        - disbursements
      summary: Cancel a pending disbursement
      description: |
       Cancels the given disbursement if it has not yet been processed. Note that a disbursement cannot be cancelled
       after it has been submitted for payment to the downstream processor.
      operationId: cancelDisbursement
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          description: disbursement Id
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC018.0}"
          x-validation-max-length-message: "{PC018.1}"
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  '/disbursements/{transactionId}/reverse':
    patch:
      tags:
        - disbursements
      summary: Reverse a disbursement that has already been processed
      description: |
       Submits a full (or partial) reimbursement for funds that were originally distributed via the given
       `transactionId` payment order. The resulting reimbursement will be linked to the original order.
      operationId: createDisbursementReversal
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Reversal request
          required: true
          x-validation-required-message: "{PC019.0}"
          schema:
            $ref: '#/definitions/ReversalRequest'
        - in: path
          name: transactionId
          description: Primary key for the original disbursement (assigned by YapStone)
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC018.0}"
          x-validation-max-length-message: "{PC018.1}"
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/DisbursementReversal'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/status/{currentStatus}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given current status
      description: |
        Search for disbursement transactions given the current status.
      operationId: searchByStatus
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: currentStatus
        description: Current status of the disbursement transaction
        required: true
        type: string
        maxLength: 32
        x-validation-max-length-message: "{PC020.1}"
        x-validation-required-message: "{PC020.0}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/correlation/{clientCorrelationId}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Client Correlation Id
      description: |
        Search for disbursement transactions given the Client Correlation Id.
      operationId: searchByCorrelationId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: clientCorrelationId
        description: Client Correlation Id of the disbursement transaction
        required: true
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC014.1}"
        x-validation-required-message: "{PC014.0}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/correlation/{clientCorrelationId}/status/{currentStatus}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Client Correlation Id and current status
      description: |
        Search for disbursement transactions given the Client Correlation Id and current status.
      operationId: searchByCorrelationIdAndStatus
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: clientCorrelationId
        description: Client Correlation Id of the disbursement transaction
        required: true
        type: string
        maxLength: 128
        x-validation-required-message: "{PC014.0}"
        x-validation-max-length-message: "{PC014.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - in: path
        name: currentStatus
        description: Current status Id of the disbursement transaction
        required: true
        type: string
        maxLength: 32
        x-validation-max-length-message: "{PC020.1}"
        x-validation-required-message: "{PC020.0}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/clientId/{clientUniqueTxnId}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Client unique transaction Id
      description: |
        Search for disbursement transactions given the Client unique payment transaction Id.
      operationId: searchByClientUniqueTxnId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: clientUniqueTxnId
        description: Client unique transaction Id of the disbursement transaction
        required: true
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC013.1}"
        x-validation-required-message: "{PC013.0}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/order/{orderId}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Order Id
      description: |
        Search for disbursement transactions given the Order Id.
      operationId: searchByOrderId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: orderId
        description: Order Id of the disbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC017.0}"
        x-validation-max-length-message: "{PC017.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/contract/{contractId}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Contract Id
      description: |
        Search for disbursement transactions given the Contract Id.
      operationId: searchByContractId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: contractId
        description: Contract Id of the disbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC016.0}"
        x-validation-max-length-message: "{PC016.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/instrument/{payeeInstrumentId}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Payee Instrument Id
      description: |
        Search for disbursement transactions given the Payee Instrument Id.
      operationId: searchByPayeeInstrumentId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: payeeInstrumentId
        description: Payee Instrument Id of the disbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC006.0}"
        x-validation-max-length-message: "{PC006.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/party/{payeePartyId}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Payee Party Id
      description: |
        Search for disbursement transactions given the Payee Party Id.
      operationId: searchByPayeePartyId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: payeePartyId
        description: Payee Party Id of the disbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC007.0}"
        x-validation-max-length-message: "{PC007.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/currency/{currency}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given currency
      description: |
        Search for disbursement transactions given the currency.
      operationId: searchByCurrency
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: currency
        description: Currency of the disbursement transaction
        required: true
        type: string
        maxLength: 3
        x-validation-required-message: "{PC003.0}"
        x-validation-max-length-message: "{PC003.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/disbursements/origination/{originationId}':
    get:
      tags:
      - disbursements
      summary: Returns all disbursement transactions matching given Origination Id
      description: |
        Search for disbursement transactions given the Origination Id.
      operationId: searchByOriginationId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: originationId
        description: Origination Id of the disbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC025.0}"
        x-validation-max-length-message: "{PC025.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DisbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  /reimbursements:
    post:
      tags:
        - reimbursements
      summary: Submit on-demand reimbursements to retrieve funds from the given Payees
      description: |
       Provides instructions from the Marketplace for funds to be retrieved from one or more Payee accounts.
       Reimbursement requests are grouped by currency, and funds from successful reimbursements will be returned into
       the corresponding funding pool. Note also that some currencies require a valid mandate to be on file prior to
       processing. <br/>
       Response is organized in two collections (`accepted` and `rejected`) to distinguish successful and failed items.
      operationId: createReimbursement
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Reimbursement request
          required: true
          x-validation-required-message: "{PC012.0}"
          schema:
            $ref: '#/definitions/ReimbursementRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/ReimbursementResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  '/reimbursements/{transactionId}':
    get:
      tags:
        - reimbursements
      summary: Fetch a single reimbursement
      description: Returns the reimbursement detail and status history for the given `transactionId`
      operationId: getReimbursement
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          description: Primary key for a single reimbursement record (assigned by YapStone)
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC018.0}"
          x-validation-max-length-message: "{PC018.1}"
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Reimbursement'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  '/reimbursements/{transactionId}/cancel':
    patch:
      tags:
        - reimbursements
      summary: Cancel a pending reimbursement
      description: |
       Cancels the given reimbursement if it has not yet been processed. Note that a reimbursement cannot be cancelled
       after it has been submitted to the downstream processor.
      operationId: cancelReimbursement
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          description: reimbursement Id
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC018.0}"
          x-validation-max-length-message: "{PC018.1}"
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  '/reimbursements/{transactionId}/reverse':
    patch:
      tags:
        - reimbursements
      summary: Reverse a reimbursement that has already been processed
      description: |
       Submits a full (or partial) disbursement for funds that were originally retrieved via the given
       `transactionId` reimbursement. The resulting disbursement will be linked to the original order.
      operationId: createReimbursementReversal
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Reversal request
          required: true
          x-validation-required-message: "{PC019.0}"
          schema:
            $ref: '#/definitions/ReversalRequest'
        - in: path
          name: transactionId
          description: Id of the reimbursement
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC018.0}"
          x-validation-max-length-message: "{PC018.1}"
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/ReimbursementReversal'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  '/reimbursements/status/{currentStatus}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given current status
      description: |
        Search for reimbursement transactions given the current status.
      operationId: searchByStatus
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: currentStatus
        description: Current status of the reimbursement transaction
        required: true
        type: string
        maxLength: 32
        x-validation-max-length-message: "{PC020.1}"
        x-validation-required-message: "{PC020.0}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/correlation/{clientCorrelationId}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given Client Correlation Id
      description: |
        Search for reimbursement transactions given the Client Correlation Id.
      operationId: searchByCorrelationId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: clientCorrelationId
        description: Client Correlation Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC014.1}"
        x-validation-required-message: "{PC014.0}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/correlation/{clientCorrelationId}/status/{currentStatus}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given Client Correlation Id and current status
      description: |
        Search for reimbursement transactions given the Client Correlation Id and current status.
      operationId: searchByCorrelationIdAndStatus
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: clientCorrelationId
        description: Client Correlation Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 128
        x-validation-required-message: "{PC014.0}"
        x-validation-max-length-message: "{PC014.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - in: path
        name: currentStatus
        description: Current status Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 32
        x-validation-max-length-message: "{PC020.1}"
        x-validation-required-message: "{PC020.0}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/clientId/{clientUniqueTxnId}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given Client unique transaction Id
      description: |
        Search for reimbursement transactions given the Client unique payment transaction Id.
      operationId: searchByClientUniqueTxnId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: clientUniqueTxnId
        description: Client unique transaction Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC013.1}"
        x-validation-required-message: "{PC013.0}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/order/{orderId}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given Order Id
      description: |
        Search for reimbursement transactions given the Order Id.
      operationId: searchByOrderId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: orderId
        description: Order Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC017.0}"
        x-validation-max-length-message: "{PC017.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/contract/{contractId}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given Contract Id
      description: |
        Search for reimbursement transactions given the Contract Id.
      operationId: searchByContractId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: contractId
        description: Contract Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC016.0}"
        x-validation-max-length-message: "{PC016.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/instrument/{payeeInstrumentId}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given Payee Instrument Id
      description: |
        Search for reimbursement transactions given the Payee Instrument Id.
      operationId: searchByPayeeInstrumentId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: payeeInstrumentId
        description: Payee Instrument Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC006.0}"
        x-validation-max-length-message: "{PC006.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/party/{payeePartyId}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given Payee Party Id
      description: |
        Search for reimbursement transactions given the Payee Party Id.
      operationId: searchByPayeePartyId
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: payeePartyId
        description: Payee Party Id of the reimbursement transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC007.0}"
        x-validation-max-length-message: "{PC007.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/currency/{currency}':
    get:
      tags:
      - reimbursements
      summary: Returns all reimbursement transactions matching given currency
      description: |
        Search for reimbursement transactions given the currency.
      operationId: searchByCurrency
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/offset"
      - $ref: "#/parameters/limit"
      - in: path
        name: currency
        description: Currency of the reimbursement transaction
        required: true
        type: string
        maxLength: 3
        x-validation-required-message: "{PC003.0}"
        x-validation-max-length-message: "{PC003.1}"
      - name: marketplaceId
        in: query
        description: Marketplace Id of the requestor
        required: false
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC015.1}"
      - name: createdDateFrom
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      - name: createdDateTo
        in: query
        description: Created date of the transaction. Format YYYY-MM-DD
        required: false
        type: string
        format: date
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ReimbursementListResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  '/reimbursements/origination/{originationId}':
      get:
        tags:
        - reimbursements
        summary: Returns all reimbursement transactions matching given Origination Id
        description: |
          Search for reimbursement transactions given the Origination Id.
        operationId: searchByOriginationId
        security:
        - Bearer: []
        parameters:
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/limit"
        - in: path
          name: originationId
          description: Origination Id of the reimbursement transaction
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC025.0}"
          x-validation-max-length-message: "{PC025.1}"
        - name: marketplaceId
          in: query
          description: Marketplace Id of the requestor
          required: false
          type: string
          maxLength: 64
          x-validation-max-length-message: "{PC015.1}"
        - name: createdDateFrom
          in: query
          description: Created date of the transaction. Format YYYY-MM-DD
          required: false
          type: string
          format: date
        - name: createdDateTo
          in: query
          description: Created date of the transaction. Format YYYY-MM-DD
          required: false
          type: string
          format: date
        responses:
          '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/ReimbursementListResponse'
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'

  /orders/{orderId}/funding:
    post:
      tags:
        - orders
      summary: Reserve funds from pool to disburse the order
      description: |
        Reserve funds from the pool in funding domain for the transactions in the order.
      operationId: reserveFundsForOrder
      security:
        - Bearer: []
      parameters:
        - in: path
          name: orderId
          description: Id of the order
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC017.0}"
          x-validation-max-length-message: "{PC017.1}"
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/OrderFundingResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
    patch:
      tags:
        - orders
      summary: Process the order with available funds
      description: |
        When Hold is moved from Pending funds to funded this API will be called by the Hold listener to update
        the transactions to pending processing which are in pending funds status.
      operationId: processFundsForOrder
      security:
        - Bearer: []
      parameters:
        - in: path
          name: orderId
          description: Id of the order
          required: true
          type: string
          maxLength: 64
          x-validation-required-message: "{PC017.0}"
          x-validation-max-length-message: "{PC017.1}"
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Empty'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/OrderFundingResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  /orders/return:
    post:
      tags:
        - orders
      summary: Create a linked return order for disbursement return, updates the transactions and update the funding pool.
      description: |
        For the given disbursement return this creates a linked return order, updates the transactions and update the funding pool
      operationId: createReturnOrder
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: return request
          required: true
          x-validation-required-message: "{PC024.0}"
          schema:
            $ref: '#/definitions/ReturnRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/ReturnResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'
  /transactions/{transactionId}/reserveFunds:
    post:
      tags:
      - transactions
      summary: Reserve funds from pool to disburse the transaction
      description: |
        Reserve funds from the pool in funding domain for the transaction.
      operationId: reserveFundsForTransaction
      security:
      - Bearer: []
      parameters:
      - in: path
        name: transactionId
        description: Id of the transaction
        required: true
        type: string
        maxLength: 64
        x-validation-required-message: "{PC026.0}"
        x-validation-max-length-message: "{PC026.1}"
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/TransactionFundingResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Errors'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Errors'

  /transactions/{transactionId}/releaseFunds:
      patch:
        tags:
          - transactions
        summary: Clear the poolActivity and update transaction status.
        description: |
            Clear the poolActivity linked to the trasaction and update transaction status.
        operationId: releaseFundsForReimbursement
        security:
          - Bearer: []
        parameters:
          - in: path
            name: transactionId
            description: Id of the transaction
            required: true
            type: string
            maxLength: 64
            x-validation-required-message: "{PC026.0}"
            x-validation-max-length-message: "{PC026.1}"
          - in: body
            name: body
            required: false
            schema:
              $ref: '#/definitions/Empty'
        responses:
          '204':
            description: No content
          '400':
            description: Bad request
            schema:
              $ref: '#/definitions/Errors'
          '401':
            description: Unauthorized
            schema:
              $ref: '#/definitions/Errors'
          '404':
            description: Not found
            schema:
              $ref: '#/definitions/Errors'
          '500':
            description: Internal server error
            schema:
              $ref: '#/definitions/Errors'
definitions:
  PoolListResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          fundingPools:
            type: array
            items:
              $ref: '#/definitions/FundingPool'
  FundingPool:
    type: object
    properties:
      poolId:
        type: string
      marketplaceId:
        type: string
      currency:
        type: string
      goodFundsBalance:
        type: integer
        format: int64
      debitHoldAmount:
        type: integer
        format: int64
      creditHoldAmount:
        type: integer
        format: int64
      pendingReimbursementAmount:
        type: integer
        format: int64
      modifiedDate:
        type: string
        format: date-time
  Deposit:
    type: object
    properties:
      depositId:
        type: string
      currency:
        type: string
      detail:
        $ref: '#/definitions/DepositDetail'
      postedDate:
        type: string
        format: date-time
      expirationDate:
        type: string
        format: date-time
      currentStatus:
        type: string
      statusDate:
        type: string
        format: date-time
      history:
        type: array
        items:
          $ref: '#/definitions/StatusChanges'
  DepositToken:
    type: object
    properties:
      depositToken:
        type: string
  DepositDetail:
    type: object
    required:
      - bankReferenceTag
      - amount
    properties:
      clientUniqueTxnId:
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC013.0}"
      clientCorrelationId:
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC014.0}"
      bankReferenceTag:
        type: string
        minLength: 5
        maxLength: 32
        x-validation-required-message: "{PC001.0}"
        x-validation-min-max-length-message: "{PC001.1}"
      amount:
        type: integer
        format: int64
        minimum: 1
        x-validation-required-message: "{PC002.0}"
        x-validation-minimum-message: "{PC002.1}"
  DepositRequest:
    type: object
    required:
      - currency
      - deposits
    properties:
      currency:
        type: string
        maxLength: 3
        minLength: 3
        x-validation-required-message: "{PC003.0}"
        x-validation-min-max-length-message: "{PC003.1}"
      deposits:
        type: array
        items:
          $ref: '#/definitions/DepositDetail'
        minItems: 1
        maxItems: 100
        x-validation-required-message: "{PC008.0}"
        x-validation-min-max-items-message: "{PC008.1}"
  DepositResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          deposits:
            type: array
            items:
              $ref: '#/definitions/Deposit'
  Disbursement:
    type: object
    properties:
      transactionId:
        type: string
      currency:
        type: string
      detail:
        $ref: '#/definitions/PaymentTransactionDetail'
      postedDate:
        type: string
        format: date-time
      expirationDate:
        type: string
        format: date-time
      currentStatus:
        type: string
      history:
        type: array
        items:
          $ref: '#/definitions/StatusChanges'
  DisbursementRequest:
    type: object
    required:
      - currency
      - disbursements
    properties:
      currency:
        type: string
        minLength: 3
        maxLength: 3
        x-validation-required-message: "{PC003.0}"
        x-validation-min-max-length-message: "{PC003.1}"
      disbursements:
        type: array
        items:
          $ref: '#/definitions/PaymentTransactionDetail'
        minItems: 1
        maxItems: 1000
        x-validation-required-message: "{PC009.0}"
        x-validation-min-max-items-message: "{PC009.1}"
  DisbursementResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          requestOrderId:
            type: string
          createdOn:
            type: string
            format: date-time
          modifiedOn:
            type: string
            format: date-time
          accepted:
            type: array
            items:
              $ref: '#/definitions/Disbursement'
          rejected:
            type: array
            items:
              $ref: '#/definitions/RejectedTransaction'
  DisbursementListResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          disbursements:
            type: array
            items:
              $ref: '#/definitions/Disbursement'
  Reimbursement:
    type: object
    properties:
      transactionId:
        type: string
      currency:
        type: string
      detail:
        $ref: '#/definitions/PaymentTransactionDetail'
      postedDate:
        type: string
        format: date-time
      currentStatus:
        type: string
      history:
        type: array
        items:
          $ref: '#/definitions/StatusChanges'
  ReimbursementRequest:
    type: object
    required:
      - currency
      - reimbursements
    properties:
      currency:
        type: string
        minLength: 3
        maxLength: 3
        x-validation-required-message: "{PC003.0}"
        x-validation-min-max-length-message: "{PC003.1}"
      reimbursements:
        type: array
        items:
          $ref: '#/definitions/PaymentTransactionDetail'
        minItems: 1
        maxItems: 1000
        x-validation-required-message: "{PC012.0}"
        x-validation-min-max-items-message: "{PC012.1}"
  ReimbursementResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          requestOrderId:
            type: string
          createdOn:
            type: string
            format: date-time
          modifiedOn:
            type: string
            format: date-time
          accepted:
            type: array
            items:
              $ref: '#/definitions/Reimbursement'
          rejected:
            type: array
            items:
              $ref: '#/definitions/RejectedTransaction'
  ReimbursementListResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          reimbursements:
            type: array
            items:
              $ref: '#/definitions/Reimbursement'
  PaymentTransactionDetail:
    type: object
    required:
      - payeeContractId
      - payeeInstrumentId
      - payeeApplicantId
      - amount
    properties:
      clientUniqueTxnId:
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC013.1}"
      clientCorrelationId:
        type: string
        maxLength: 128
        x-validation-max-length-message: "{PC014.0}"
      originationId:
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC025.1}"
      payerPartyId:
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC036.1}"
      payeeContractId:
        type: string
        maxLength: 64
        x-validation-required-message: "{PC016.0}"
        x-validation-max-length-message: "{PC016.1}"
      payeeInstrumentId:
        type: string
        maxLength: 64
        x-validation-required-message: "{PC006.0}"
        x-validation-max-length-message: "{PC006.1}"
      payeeApplicantId:
        type: string
        maxLength: 64
        x-validation-required-message: "{PC007.0}"
        x-validation-max-length-message: "{PC007.1}"
      amount:
        type: integer
        format: int64
        minimum: 1
        x-validation-required-message: "{PC002.0}"
        x-validation-minimum-message: "{PC002.1}"
      entityRef:
        $ref: '#/definitions/EntityRef'
        x-validation-required-message: "{PC039.0}"
  RejectedTransaction:
    type: object
    properties:
      rejectReason:
        $ref: '#/definitions/Errors'
      originalRequest:
        $ref: '#/definitions/PaymentTransactionDetail'
  ReversalRequest:
    type: object
    required:
      - reversalType
    properties:
      reversalType:
        type: string
        enum:
          - FULL
          - PARTIAL
        x-validation-required-message: "{PC027.0}"
      reversalAmount:
        type: integer
        format: int64
        minimum: 1
        x-validation-minimum-message: "{PC028.1}"
  ReversalResponse:
    allOf:
    - $ref: '#/definitions/RestResponse'
    - type: object
      properties:
        reversalTransactionId:
          type: string
        originalTransactionId:
          type: string
        priorReversals:
          type: array
          items:
            type: string
  DisbursementReversal:
    allOf:
    - $ref: '#/definitions/ReversalResponse'
    - type: object
      properties:
        reimbursement:
          $ref: '#/definitions/Reimbursement'
  ReimbursementReversal:
    allOf:
    - $ref: '#/definitions/ReversalResponse'
    - type: object
      properties:
        disbursement:
          $ref: '#/definitions/Disbursement'
  ReturnRequest:
    type: object
    properties:
      item:
        $ref: '#/definitions/ReturnDetail'
  OrderFundingResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          status:
            type: string
            enum:
              - FUNDS_RESERVED
              - ORDER_PROCESSED
              - INSUFFICIENT_FUNDS
  TransactionFundingResponse:
    allOf:
    - $ref: '#/definitions/RestResponse'
    - type: object
      properties:
        status:
          type: string
          enum:
          - FUNDS_RESERVED
          - TRANSACTION_PROCESSED
  ReturnDetail:
    allOf:
    - $ref: '#/definitions/RestEntity'
    - type: object
      required:
        - amount
        - returnId
        - payoutIdentifier
        - mt940Indicator
      properties:
        returnDate:
          type: string
          format: date-time
        returnReasonCode:
          type: string
          maxLength: 32
          x-validation-max-length-message: "{PC031.1}"
        transactionId:
          type: string
          maxLength: 64
          x-validation-max-length-message: "{PC018.1}"
        amount:
          type: integer
          format: int64
          minimum: 1
          x-validation-required-message: "{PC002.0}"
          x-validation-minimum-message: "{PC002.1}"
        currency:
          type: string
          minLength: 3
          maxLength: 3
          x-validation-min-max-length-message: "{PC003.1}"
        mt940Indicator:
          type: boolean
          x-validation-required-message: "{PC032.0}"
        description:
          type: string
          maxLength: 256
          x-validation-max-length-message: "{PC033.1}"
        returnId:
          type: string
          maxLength: 64
          x-validation-required-message: "{PC011.0}"
          x-validation-max-length-message: "{PC011.1}"
        accountActivityId:
          type: string
          maxLength: 64
          x-validation-max-length-message: "{PC034.1}"
        status:
          type: string
          maxLength: 32
          x-validation-max-length-message: "{PC020.1}"
        payoutIdentifier:
          type: string
          maxLength: 64
          x-validation-required-message: "{PC010.0}"
          x-validation-max-length-message: "{PC010.1}"
        isPoolUpdateRequired:
          type: boolean

  ReturnResponse:
    allOf:
      - $ref: '#/definitions/RestResponse'
      - type: object
        properties:
          orderId:
            type: string
          status:
            type: string
          amount:
            type: integer
            format: int64

  Page:
    description: Pagination support
    properties:
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve
      offset:
        type: integer
        format: int32
        description: Position in pagination
      count:
        type: integer
        format: int32
        description: Number of items available
  Meta:
    description: Response metadata
    properties:
      page:
        $ref: '#/definitions/Page'
  RestEntity:
    type: object
    discriminator: "restEntityType" # required for inheritance to work
    properties:
      id:
        type: string
        maxLength: 64
        x-validation-max-length-message: "{PC035.1}"
      version:
        type: integer
        format: int64
      meta:
        $ref: '#/definitions/EntityMeta'
  EntityMeta:
    description: Meta data that belongs to a single entity being returned
    properties:
      createdOn:
        type: string
        format: date-time
      modifiedOn:
        type: string
        format: date-time
  EntityRef:
    type: object
    required:
    - id
    - type
    properties:
      id:
        type: string
        maxLength: 64
        description: "Id for the entity reference."
        x-validation-required-message: "{PC037.0}"
        x-validation-max-length-message: "{PC037.1}"
      type:
        type: string
        description: "Type of the entity ref."
        enum: [MARKETPLACE, MERCHANT, PARTY, ASSET_LISTING]
        x-validation-required-message: "{PC038.0}"

  RestResponse:
    type: object
    properties:
      _meta:
        $ref: '#/definitions/Meta'
  StatusChanges:
    type: object
    properties:
      status:
        type: string
      reason:
        type: string
      changeDate:
        type: string
        format: date-time
  ErrorCodes:
    type: string
    enum: [PCErr0001, PCErr0002]
    description: >
      Processing error: <br/>
      * `PCErr0001` - Funding Pool Not Found <br/>
      * `PCErr0002` - Empty Order
  Empty:
    description: Empty body required to enable PATCH method for entity state changes (e.g. cancel) via Jersey client
    type: object
    properties:
      empty:
        type: string
        default: ''
    example:
      empty: ''
  Errors:

parameters:
  limit:
    name: "limit"
    in: "query"
    description: "Maximum number of items to return"
    type: "integer"
    default: "10"
  offset:
    name: "offset"
    in: "query"
    description: "Offset to start returning items at"
    type: "integer"
    default: "0"